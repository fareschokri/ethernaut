{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "60806040527320ff93b3c7955b056b4faaa42cd705cc487ee814600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e5806100b56000396000f3fe6080604052600436106100435760003560e01c806341c0e1b51461004e5780638da5cb5b14610065578063a3fdfee314610090578063f787e039146100a757610044565b5b61004c6100d2565b005b34801561005a57600080fd5b506100636101e7565b005b34801561007157600080fd5b5061007a610278565b6040516100879190610319565b60405180910390f35b34801561009c57600080fd5b506100a56100d2565b005b3480156100b357600080fd5b506100bc61029c565b6040516100c99190610319565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662788b606040516024016040516020818303038152906040527f3ccfd60b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161019f9190610302565b60006040518083038160008787f1925050503d80600081146101dd576040519150601f19603f3d011682016040523d82523d6000602084013e6101e2565b606091505b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023f57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102cb8161034a565b82525050565b60006102dc82610334565b6102e6818561033f565b93506102f681856020860161037c565b80840191505092915050565b600061030e82846102d1565b915081905092915050565b600060208201905061032e60008301846102c2565b92915050565b600081519050919050565b600081905092915050565b60006103558261035c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b8381101561039a57808201518184015260208101905061037f565b838111156103a9576000848401525b5050505056fea26469706673582212208f4ba91fe955d6f69bd8e42f870757785d4005dc063b4bd7ca20415b67bb532464736f6c63430008020033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x20FF93B3C7955B056B4FAAA42CD705CC487EE814 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3E5 DUP1 PUSH2 0xB5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0xA3FDFEE3 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0xF787E039 EQ PUSH2 0xA7 JUMPI PUSH2 0x44 JUMP JUMPDEST JUMPDEST PUSH2 0x4C PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63 PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x788B60 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x3CCFD60B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2CB DUP2 PUSH2 0x34A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC DUP3 PUSH2 0x334 JUMP JUMPDEST PUSH2 0x2E6 DUP2 DUP6 PUSH2 0x33F JUMP JUMPDEST SWAP4 POP PUSH2 0x2F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x37C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP3 DUP5 PUSH2 0x2D1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x355 DUP3 PUSH2 0x35C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x37F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x4B 0xA9 0x1F 0xE9 SSTORE 0xD6 0xF6 SWAP12 0xD8 0xE4 0x2F DUP8 SMOD JUMPI PUSH25 0x5D4005DC063B4BD7CA20415B67BB532464736F6C6343000802 STOP CALLER ",
			"sourceMap": "57:527:0:-:0;;;138:42;115:65;;;;;;;;;;;;;;;;;;;;187:52;;;;;;;;;;221:10;213:5;;:18;;;;;;;;;;;;;;;;;;57:527;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1816:1",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "72:53:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "89:3:1"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "112:5:1"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "94:17:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "94:24:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "82:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "82:37:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "82:37:1"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "60:5:1",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "67:3:1",
										"type": ""
									}
								],
								"src": "7:118:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "239:265:1",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "249:52:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "295:5:1"
													}
												],
												"functionName": {
													"name": "array_length_t_bytes_memory_ptr",
													"nodeType": "YulIdentifier",
													"src": "263:31:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "263:38:1"
											},
											"variables": [
												{
													"name": "length",
													"nodeType": "YulTypedName",
													"src": "253:6:1",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "310:95:1",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "393:3:1"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "398:6:1"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
													"nodeType": "YulIdentifier",
													"src": "317:75:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "317:88:1"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "310:3:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "440:5:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "447:4:1",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "436:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "436:16:1"
													},
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "454:3:1"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "459:6:1"
													}
												],
												"functionName": {
													"name": "copy_memory_to_memory",
													"nodeType": "YulIdentifier",
													"src": "414:21:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "414:52:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "414:52:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "475:23:1",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "486:3:1"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "491:6:1"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "482:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "482:16:1"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "475:3:1"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "220:5:1",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "227:3:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "235:3:1",
										"type": ""
									}
								],
								"src": "131:373:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "644:137:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "655:100:1",
											"value": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "742:6:1"
													},
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "751:3:1"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
													"nodeType": "YulIdentifier",
													"src": "662:79:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "662:93:1"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "655:3:1"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "765:10:1",
											"value": {
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "772:3:1"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "765:3:1"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "623:3:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "629:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "640:3:1",
										"type": ""
									}
								],
								"src": "510:271:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "885:124:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "895:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "907:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "918:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "903:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "903:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "895:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "975:6:1"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "988:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "999:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "984:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "984:17:1"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "931:43:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "931:71:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "931:71:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "857:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "869:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "880:4:1",
										"type": ""
									}
								],
								"src": "787:222:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1073:40:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1084:22:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1100:5:1"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1094:5:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1094:12:1"
											},
											"variableNames": [
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "1084:6:1"
												}
											]
										}
									]
								},
								"name": "array_length_t_bytes_memory_ptr",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1056:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "1066:6:1",
										"type": ""
									}
								],
								"src": "1015:98:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1232:34:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1242:18:1",
											"value": {
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1257:3:1"
											},
											"variableNames": [
												{
													"name": "updated_pos",
													"nodeType": "YulIdentifier",
													"src": "1242:11:1"
												}
											]
										}
									]
								},
								"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1204:3:1",
										"type": ""
									},
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "1209:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "updated_pos",
										"nodeType": "YulTypedName",
										"src": "1220:11:1",
										"type": ""
									}
								],
								"src": "1119:147:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1317:51:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1327:35:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1356:5:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "1338:17:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1338:24:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1327:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1299:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1309:7:1",
										"type": ""
									}
								],
								"src": "1272:96:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1419:81:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1429:65:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1444:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1451:42:1",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "1440:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1440:54:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1429:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1401:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1411:7:1",
										"type": ""
									}
								],
								"src": "1374:126:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1555:258:1",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1565:10:1",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1574:1:1",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "i",
													"nodeType": "YulTypedName",
													"src": "1569:1:1",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1634:63:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "dst",
																			"nodeType": "YulIdentifier",
																			"src": "1659:3:1"
																		},
																		{
																			"name": "i",
																			"nodeType": "YulIdentifier",
																			"src": "1664:1:1"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "1655:3:1"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "1655:11:1"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1678:3:1"
																				},
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1683:1:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1674:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1674:11:1"
																		}
																	],
																	"functionName": {
																		"name": "mload",
																		"nodeType": "YulIdentifier",
																		"src": "1668:5:1"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "1668:18:1"
																}
															],
															"functionName": {
																"name": "mstore",
																"nodeType": "YulIdentifier",
																"src": "1648:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "1648:39:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1648:39:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "i",
														"nodeType": "YulIdentifier",
														"src": "1595:1:1"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "1598:6:1"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "1592:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1592:13:1"
											},
											"nodeType": "YulForLoop",
											"post": {
												"nodeType": "YulBlock",
												"src": "1606:19:1",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "1608:15:1",
														"value": {
															"arguments": [
																{
																	"name": "i",
																	"nodeType": "YulIdentifier",
																	"src": "1617:1:1"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1620:2:1",
																	"type": "",
																	"value": "32"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "1613:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "1613:10:1"
														},
														"variableNames": [
															{
																"name": "i",
																"nodeType": "YulIdentifier",
																"src": "1608:1:1"
															}
														]
													}
												]
											},
											"pre": {
												"nodeType": "YulBlock",
												"src": "1588:3:1",
												"statements": []
											},
											"src": "1584:113:1"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1731:76:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "dst",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:1"
																		},
																		{
																			"name": "length",
																			"nodeType": "YulIdentifier",
																			"src": "1786:6:1"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "1777:3:1"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "1777:16:1"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1795:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "mstore",
																"nodeType": "YulIdentifier",
																"src": "1770:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "1770:27:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1770:27:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "i",
														"nodeType": "YulIdentifier",
														"src": "1712:1:1"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "1715:6:1"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "1709:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1709:13:1"
											},
											"nodeType": "YulIf",
											"src": "1706:2:1"
										}
									]
								},
								"name": "copy_memory_to_memory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "src",
										"nodeType": "YulTypedName",
										"src": "1537:3:1",
										"type": ""
									},
									{
										"name": "dst",
										"nodeType": "YulTypedName",
										"src": "1542:3:1",
										"type": ""
									},
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "1547:6:1",
										"type": ""
									}
								],
								"src": "1506:307:1"
							}
						]
					},
					"contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n}\n",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "6080604052600436106100435760003560e01c806341c0e1b51461004e5780638da5cb5b14610065578063a3fdfee314610090578063f787e039146100a757610044565b5b61004c6100d2565b005b34801561005a57600080fd5b506100636101e7565b005b34801561007157600080fd5b5061007a610278565b6040516100879190610319565b60405180910390f35b34801561009c57600080fd5b506100a56100d2565b005b3480156100b357600080fd5b506100bc61029c565b6040516100c99190610319565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662788b606040516024016040516020818303038152906040527f3ccfd60b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161019f9190610302565b60006040518083038160008787f1925050503d80600081146101dd576040519150601f19603f3d011682016040523d82523d6000602084013e6101e2565b606091505b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023f57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102cb8161034a565b82525050565b60006102dc82610334565b6102e6818561033f565b93506102f681856020860161037c565b80840191505092915050565b600061030e82846102d1565b915081905092915050565b600060208201905061032e60008301846102c2565b92915050565b600081519050919050565b600081905092915050565b60006103558261035c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b8381101561039a57808201518184015260208101905061037f565b838111156103a9576000848401525b5050505056fea26469706673582212208f4ba91fe955d6f69bd8e42f870757785d4005dc063b4bd7ca20415b67bb532464736f6c63430008020033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0xA3FDFEE3 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0xF787E039 EQ PUSH2 0xA7 JUMPI PUSH2 0x44 JUMP JUMPDEST JUMPDEST PUSH2 0x4C PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63 PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x788B60 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x3CCFD60B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2CB DUP2 PUSH2 0x34A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC DUP3 PUSH2 0x334 JUMP JUMPDEST PUSH2 0x2E6 DUP2 DUP6 PUSH2 0x33F JUMP JUMPDEST SWAP4 POP PUSH2 0x2F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x37C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP3 DUP5 PUSH2 0x2D1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x355 DUP3 PUSH2 0x35C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x37F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x4B 0xA9 0x1F 0xE9 SSTORE 0xD6 0xF6 SWAP12 0xD8 0xE4 0x2F DUP8 SMOD JUMPI PUSH25 0x5D4005DC063B4BD7CA20415B67BB532464736F6C6343000802 STOP CALLER ",
			"sourceMap": "57:527:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:6;:4;:6::i;:::-;57:527;328:81;;;;;;;;;;;;;:::i;:::-;;88:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;417:104;;;;;;;;;;;;;:::i;:::-;;115:65;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;417:104;451:5;;;;;;;;;;;:10;;466:7;475:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;451:62;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:104::o;328:81::-;296:5;;;;;;;;;;284:17;;:10;:17;;;276:26;;;;;;394:5:::1;::::0;::::1;;;;;;;;372:29;;;88:20:::0;;;;;;;;;;;;:::o;115:65::-;;;;;;;;;;;;;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:373::-;;263:38;295:5;263:38;:::i;:::-;317:88;398:6;393:3;317:88;:::i;:::-;310:95;;414:52;459:6;454:3;447:4;440:5;436:16;414:52;:::i;:::-;491:6;486:3;482:16;475:23;;239:265;;;;;:::o;510:271::-;;662:93;751:3;742:6;662:93;:::i;:::-;655:100;;772:3;765:10;;644:137;;;;:::o;787:222::-;;918:2;907:9;903:18;895:26;;931:71;999:1;988:9;984:17;975:6;931:71;:::i;:::-;885:124;;;;:::o;1015:98::-;;1100:5;1094:12;1084:22;;1073:40;;;:::o;1119:147::-;;1257:3;1242:18;;1232:34;;;;:::o;1272:96::-;;1338:24;1356:5;1338:24;:::i;:::-;1327:35;;1317:51;;;:::o;1374:126::-;;1451:42;1444:5;1440:54;1429:65;;1419:81;;;:::o;1506:307::-;1574:1;1584:113;1598:6;1595:1;1592:13;1584:113;;;1683:1;1678:3;1674:11;1668:18;1664:1;1659:3;1655:11;1648:39;1620:2;1617:1;1613:10;1608:15;;1584:113;;;1715:6;1712:1;1709:13;1706:2;;;1795:1;1786:6;1781:3;1777:16;1770:27;1706:2;1555:258;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "199400",
				"executionCost": "41978",
				"totalCost": "241378"
			},
			"external": {
				"": "infinite",
				"daVic()": "1258",
				"deny()": "infinite",
				"kill()": "31822",
				"owner()": "1211"
			}
		},
		"methodIdentifiers": {
			"daVic()": "f787e039",
			"deny()": "a3fdfee3",
			"kill()": "41c0e1b5",
			"owner()": "8da5cb5b"
		}
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"stateMutability": "payable",
			"type": "fallback"
		},
		{
			"inputs": [],
			"name": "daVic",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "deny",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "kill",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}