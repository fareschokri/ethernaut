{
	"id": "7724624386da4e9b9a743599b658c6d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Hak.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ninterface GatekeeperOne{\r\n    function enter(bytes8) external returns (bool);\r\n}\r\n\r\ncontract Hak {\r\n\r\n\r\n  using SafeMath for uint256;\r\n  address public entrant;\r\n  address public owner;\r\n  address hisAddr = 0xdBc7c99fE6B538631473060E8C2FBA627611d635;\r\n\r\n  GatekeeperOne gone = GatekeeperOne(hisAddr);\r\n\r\n\r\n    function getGasLeft()public view returns(uint) {\r\n        return gasleft();\r\n    }\r\n\r\n        function isEqualGasLeft(uint  _kk) public view returns(bool, uint){\r\n        return (_kk == gasleft(), gasleft());\r\n    }\r\n\r\n    function call(bytes8 _jma)public returns(uint){\r\n      gone.enter(_jma);\r\n        return (gasleft());\r\n    }\r\n  receive() external payable{}\r\n  fallback() external payable{}\r\n\r\n  /*modifier gateThree(bytes8 _gateKey) {\r\n      require(uint32(uint64(_gateKey)) == uint16(uint64(_gateKey)), \"GatekeeperOne: invalid gateThree part one\");\r\n      require(uint32(uint64(_gateKey)) != uint64(_gateKey), \"GatekeeperOne: invalid gateThree part two\");\r\n      require(uint32(uint64(_gateKey)) == uint16(uint160(tx.origin)), \"GatekeeperOne: invalid gateThree part three\");\r\n    _;\r\n  }\r\n\r\n  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\r\n    entrant = tx.origin;\r\n    return true;\r\n  }*/\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x7EDE212DD970B649F5116CC768B3C6213D1901A47838945C3065D5F1EB SWAP3 PUSH25 0x64736F6C634300080F00330000000000000000000000000000 ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x7EDE212DD970B649F5116CC768B3C6213D1901A47838945C3065D5F1EB SWAP3 PUSH25 0x64736F6C634300080F00330000000000000000000000000000 ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Hak.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Hak.sol": {
				"GatekeeperOne": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes8",
									"name": "",
									"type": "bytes8"
								}
							],
							"name": "enter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"enter(bytes8)": "3370204e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"name\":\"enter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hak.sol\":\"GatekeeperOne\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/Hak.sol\":{\"keccak256\":\"0x45ad97a9b4128403713ca6812c7ab5c87990e522c40d2ae570b86059d7b548ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09d06c4c3c34603a31771dbddaf7e4d76996f9c14874965013b9296d5d394789\",\"dweb:/ipfs/QmdG3BS7sVVRWFU3KRjEekwj7FyAAvLFMEmyzKc2SFnNr2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Hak": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "bytes8",
									"name": "_jma",
									"type": "bytes8"
								}
							],
							"name": "call",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "entrant",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGasLeft",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_kk",
									"type": "uint256"
								}
							],
							"name": "isEqualGasLeft",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Hak.sol\":205:1377  contract Hak {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Hak.sol\":328:370  0xdBc7c99fE6B538631473060E8C2FBA627611d635 */\n  0xdbc7c99fe6b538631473060e8c2fba627611d635\n    /* \"contracts/Hak.sol\":310:370  address hisAddr = 0xdBc7c99fE6B538631473060E8C2FBA627611d635 */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Hak.sol\":412:419  hisAddr */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Hak.sol\":377:420  GatekeeperOne gone = GatekeeperOne(hisAddr) */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Hak.sol\":205:1377  contract Hak {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Hak.sol\":205:1377  contract Hak {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ae1ea81\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51be4eaa\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9db31d77\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdfdb29e5\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"contracts/Hak.sol\":525:646  function isEqualGasLeft(uint  _kk) public view returns(bool, uint){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hak.sol\":431:513  function getGasLeft()public view returns(uint) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hak.sol\":285:305  address public owner */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hak.sol\":258:280  address public entrant */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hak.sol\":654:762  function call(bytes8 _jma)public returns(uint){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hak.sol\":525:646  function isEqualGasLeft(uint  _kk) public view returns(bool, uint){... */\n    tag_16:\n        /* \"contracts/Hak.sol\":580:584  bool */\n      0x00\n        /* \"contracts/Hak.sol\":586:590  uint */\n      dup1\n        /* \"contracts/Hak.sol\":617:626  gasleft() */\n      gas\n        /* \"contracts/Hak.sol\":610:613  _kk */\n      dup4\n        /* \"contracts/Hak.sol\":610:626  _kk == gasleft() */\n      eq\n        /* \"contracts/Hak.sol\":628:637  gasleft() */\n      gas\n        /* \"contracts/Hak.sol\":602:638  return (_kk == gasleft(), gasleft()) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Hak.sol\":525:646  function isEqualGasLeft(uint  _kk) public view returns(bool, uint){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Hak.sol\":431:513  function getGasLeft()public view returns(uint) {... */\n    tag_21:\n        /* \"contracts/Hak.sol\":472:476  uint */\n      0x00\n        /* \"contracts/Hak.sol\":496:505  gasleft() */\n      gas\n        /* \"contracts/Hak.sol\":489:505  return gasleft() */\n      swap1\n      pop\n        /* \"contracts/Hak.sol\":431:513  function getGasLeft()public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Hak.sol\":285:305  address public owner */\n    tag_26:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Hak.sol\":258:280  address public entrant */\n    tag_31:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Hak.sol\":654:762  function call(bytes8 _jma)public returns(uint){... */\n    tag_37:\n        /* \"contracts/Hak.sol\":695:699  uint */\n      0x00\n        /* \"contracts/Hak.sol\":709:713  gone */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hak.sol\":709:719  gone.enter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3370204e\n        /* \"contracts/Hak.sol\":720:724  _jma */\n      dup4\n        /* \"contracts/Hak.sol\":709:725  gone.enter(_jma) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      pop\n        /* \"contracts/Hak.sol\":744:753  gasleft() */\n      gas\n        /* \"contracts/Hak.sol\":736:754  return (gasleft()) */\n      swap1\n      pop\n        /* \"contracts/Hak.sol\":654:762  function call(bytes8 _jma)public returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_49:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_51:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_52:\n        /* \"#utility.yul\":490:514   */\n      tag_72\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_51\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_73:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_53:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_75\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_52\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_15:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_78\n      tag_49\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":766:885   */\n    tag_77:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_79\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_53\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1115   */\n    tag_54:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1102:1107   */\n      dup2\n        /* \"#utility.yul\":1095:1108   */\n      iszero\n        /* \"#utility.yul\":1088:1109   */\n      iszero\n        /* \"#utility.yul\":1077:1109   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1121:1230   */\n    tag_55:\n        /* \"#utility.yul\":1202:1223   */\n      tag_82\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1202:1223   */\n      tag_54\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1197:1200   */\n      dup3\n        /* \"#utility.yul\":1190:1224   */\n      mstore\n        /* \"#utility.yul\":1121:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1354   */\n    tag_56:\n        /* \"#utility.yul\":1323:1347   */\n      tag_84\n        /* \"#utility.yul\":1341:1346   */\n      dup2\n        /* \"#utility.yul\":1323:1347   */\n      tag_51\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1318:1321   */\n      dup3\n        /* \"#utility.yul\":1311:1348   */\n      mstore\n        /* \"#utility.yul\":1236:1354   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1360:1680   */\n    tag_18:\n        /* \"#utility.yul\":1475:1479   */\n      0x00\n        /* \"#utility.yul\":1513:1515   */\n      0x40\n        /* \"#utility.yul\":1502:1511   */\n      dup3\n        /* \"#utility.yul\":1498:1516   */\n      add\n        /* \"#utility.yul\":1490:1516   */\n      swap1\n      pop\n        /* \"#utility.yul\":1526:1591   */\n      tag_86\n        /* \"#utility.yul\":1588:1589   */\n      0x00\n        /* \"#utility.yul\":1577:1586   */\n      dup4\n        /* \"#utility.yul\":1573:1590   */\n      add\n        /* \"#utility.yul\":1564:1570   */\n      dup6\n        /* \"#utility.yul\":1526:1591   */\n      tag_55\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1601:1673   */\n      tag_87\n        /* \"#utility.yul\":1669:1671   */\n      0x20\n        /* \"#utility.yul\":1658:1667   */\n      dup4\n        /* \"#utility.yul\":1654:1672   */\n      add\n        /* \"#utility.yul\":1645:1651   */\n      dup5\n        /* \"#utility.yul\":1601:1673   */\n      tag_56\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1360:1680   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1908   */\n    tag_23:\n        /* \"#utility.yul\":1779:1783   */\n      0x00\n        /* \"#utility.yul\":1817:1819   */\n      0x20\n        /* \"#utility.yul\":1806:1815   */\n      dup3\n        /* \"#utility.yul\":1802:1820   */\n      add\n        /* \"#utility.yul\":1794:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1830:1901   */\n      tag_89\n        /* \"#utility.yul\":1898:1899   */\n      0x00\n        /* \"#utility.yul\":1887:1896   */\n      dup4\n        /* \"#utility.yul\":1883:1900   */\n      add\n        /* \"#utility.yul\":1874:1880   */\n      dup5\n        /* \"#utility.yul\":1830:1901   */\n      tag_56\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1686:1908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2040   */\n    tag_57:\n        /* \"#utility.yul\":1951:1958   */\n      0x00\n        /* \"#utility.yul\":1991:2033   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1984:1989   */\n      dup3\n        /* \"#utility.yul\":1980:2034   */\n      and\n        /* \"#utility.yul\":1969:2034   */\n      swap1\n      pop\n        /* \"#utility.yul\":1914:2040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2046:2142   */\n    tag_58:\n        /* \"#utility.yul\":2083:2090   */\n      0x00\n        /* \"#utility.yul\":2112:2136   */\n      tag_92\n        /* \"#utility.yul\":2130:2135   */\n      dup3\n        /* \"#utility.yul\":2112:2136   */\n      tag_57\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2101:2136   */\n      swap1\n      pop\n        /* \"#utility.yul\":2046:2142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2148:2266   */\n    tag_59:\n        /* \"#utility.yul\":2235:2259   */\n      tag_94\n        /* \"#utility.yul\":2253:2258   */\n      dup2\n        /* \"#utility.yul\":2235:2259   */\n      tag_58\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2230:2233   */\n      dup3\n        /* \"#utility.yul\":2223:2260   */\n      mstore\n        /* \"#utility.yul\":2148:2266   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2272:2494   */\n    tag_28:\n        /* \"#utility.yul\":2365:2369   */\n      0x00\n        /* \"#utility.yul\":2403:2405   */\n      0x20\n        /* \"#utility.yul\":2392:2401   */\n      dup3\n        /* \"#utility.yul\":2388:2406   */\n      add\n        /* \"#utility.yul\":2380:2406   */\n      swap1\n      pop\n        /* \"#utility.yul\":2416:2487   */\n      tag_96\n        /* \"#utility.yul\":2484:2485   */\n      0x00\n        /* \"#utility.yul\":2473:2482   */\n      dup4\n        /* \"#utility.yul\":2469:2486   */\n      add\n        /* \"#utility.yul\":2460:2466   */\n      dup5\n        /* \"#utility.yul\":2416:2487   */\n      tag_59\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2272:2494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2500:2649   */\n    tag_60:\n        /* \"#utility.yul\":2536:2543   */\n      0x00\n        /* \"#utility.yul\":2576:2642   */\n      0xffffffffffffffff000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2569:2574   */\n      dup3\n        /* \"#utility.yul\":2565:2643   */\n      and\n        /* \"#utility.yul\":2554:2643   */\n      swap1\n      pop\n        /* \"#utility.yul\":2500:2649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2655:2775   */\n    tag_61:\n        /* \"#utility.yul\":2727:2750   */\n      tag_99\n        /* \"#utility.yul\":2744:2749   */\n      dup2\n        /* \"#utility.yul\":2727:2750   */\n      tag_60\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2720:2725   */\n      dup2\n        /* \"#utility.yul\":2717:2751   */\n      eq\n        /* \"#utility.yul\":2707:2769   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":2765:2766   */\n      0x00\n        /* \"#utility.yul\":2762:2763   */\n      dup1\n        /* \"#utility.yul\":2755:2767   */\n      revert\n        /* \"#utility.yul\":2707:2769   */\n    tag_100:\n        /* \"#utility.yul\":2655:2775   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2781:2918   */\n    tag_62:\n        /* \"#utility.yul\":2826:2831   */\n      0x00\n        /* \"#utility.yul\":2864:2870   */\n      dup2\n        /* \"#utility.yul\":2851:2871   */\n      calldataload\n        /* \"#utility.yul\":2842:2871   */\n      swap1\n      pop\n        /* \"#utility.yul\":2880:2912   */\n      tag_102\n        /* \"#utility.yul\":2906:2911   */\n      dup2\n        /* \"#utility.yul\":2880:2912   */\n      tag_61\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2781:2918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2924:3251   */\n    tag_36:\n        /* \"#utility.yul\":2982:2988   */\n      0x00\n        /* \"#utility.yul\":3031:3033   */\n      0x20\n        /* \"#utility.yul\":3019:3028   */\n      dup3\n        /* \"#utility.yul\":3010:3017   */\n      dup5\n        /* \"#utility.yul\":3006:3029   */\n      sub\n        /* \"#utility.yul\":3002:3034   */\n      slt\n        /* \"#utility.yul\":2999:3118   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":3037:3116   */\n      tag_105\n      tag_49\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2999:3118   */\n    tag_104:\n        /* \"#utility.yul\":3157:3158   */\n      0x00\n        /* \"#utility.yul\":3182:3234   */\n      tag_106\n        /* \"#utility.yul\":3226:3233   */\n      dup5\n        /* \"#utility.yul\":3217:3223   */\n      dup3\n        /* \"#utility.yul\":3206:3215   */\n      dup6\n        /* \"#utility.yul\":3202:3224   */\n      add\n        /* \"#utility.yul\":3182:3234   */\n      tag_62\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3172:3234   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3244   */\n      pop\n        /* \"#utility.yul\":2924:3251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3257:3372   */\n    tag_63:\n        /* \"#utility.yul\":3342:3365   */\n      tag_108\n        /* \"#utility.yul\":3359:3364   */\n      dup2\n        /* \"#utility.yul\":3342:3365   */\n      tag_60\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3337:3340   */\n      dup3\n        /* \"#utility.yul\":3330:3366   */\n      mstore\n        /* \"#utility.yul\":3257:3372   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3378:3596   */\n    tag_43:\n        /* \"#utility.yul\":3469:3473   */\n      0x00\n        /* \"#utility.yul\":3507:3509   */\n      0x20\n        /* \"#utility.yul\":3496:3505   */\n      dup3\n        /* \"#utility.yul\":3492:3510   */\n      add\n        /* \"#utility.yul\":3484:3510   */\n      swap1\n      pop\n        /* \"#utility.yul\":3520:3589   */\n      tag_110\n        /* \"#utility.yul\":3586:3587   */\n      0x00\n        /* \"#utility.yul\":3575:3584   */\n      dup4\n        /* \"#utility.yul\":3571:3588   */\n      add\n        /* \"#utility.yul\":3562:3568   */\n      dup5\n        /* \"#utility.yul\":3520:3589   */\n      tag_63\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3378:3596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3602:3718   */\n    tag_64:\n        /* \"#utility.yul\":3672:3693   */\n      tag_112\n        /* \"#utility.yul\":3687:3692   */\n      dup2\n        /* \"#utility.yul\":3672:3693   */\n      tag_54\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3665:3670   */\n      dup2\n        /* \"#utility.yul\":3662:3694   */\n      eq\n        /* \"#utility.yul\":3652:3712   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":3708:3709   */\n      0x00\n        /* \"#utility.yul\":3705:3706   */\n      dup1\n        /* \"#utility.yul\":3698:3710   */\n      revert\n        /* \"#utility.yul\":3652:3712   */\n    tag_113:\n        /* \"#utility.yul\":3602:3718   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3724:3861   */\n    tag_65:\n        /* \"#utility.yul\":3778:3783   */\n      0x00\n        /* \"#utility.yul\":3809:3815   */\n      dup2\n        /* \"#utility.yul\":3803:3816   */\n      mload\n        /* \"#utility.yul\":3794:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3825:3855   */\n      tag_115\n        /* \"#utility.yul\":3849:3854   */\n      dup2\n        /* \"#utility.yul\":3825:3855   */\n      tag_64\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3724:3861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3867:4212   */\n    tag_47:\n        /* \"#utility.yul\":3934:3940   */\n      0x00\n        /* \"#utility.yul\":3983:3985   */\n      0x20\n        /* \"#utility.yul\":3971:3980   */\n      dup3\n        /* \"#utility.yul\":3962:3969   */\n      dup5\n        /* \"#utility.yul\":3958:3981   */\n      sub\n        /* \"#utility.yul\":3954:3986   */\n      slt\n        /* \"#utility.yul\":3951:4070   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":3989:4068   */\n      tag_118\n      tag_49\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3951:4070   */\n    tag_117:\n        /* \"#utility.yul\":4109:4110   */\n      0x00\n        /* \"#utility.yul\":4134:4195   */\n      tag_119\n        /* \"#utility.yul\":4187:4194   */\n      dup5\n        /* \"#utility.yul\":4178:4184   */\n      dup3\n        /* \"#utility.yul\":4167:4176   */\n      dup6\n        /* \"#utility.yul\":4163:4185   */\n      add\n        /* \"#utility.yul\":4134:4195   */\n      tag_65\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4124:4195   */\n      swap2\n      pop\n        /* \"#utility.yul\":4080:4205   */\n      pop\n        /* \"#utility.yul\":3867:4212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208c1df9ccbfe1cdcdb9a20e97f5ff9d2190e6bc583e8986fe16d66268a692b8fa64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273dbc7c99fe6b538631473060e8c2fba627611d635600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100c857600080fd5b506104ce806100d86000396000f3fe60806040526004361061004e5760003560e01c80633ae1ea811461005757806351be4eaa146100955780638da5cb5b146100c05780639db31d77146100eb578063dfdb29e51461011657610055565b3661005557005b005b34801561006357600080fd5b5061007e60048036038101906100799190610299565b610153565b60405161008c9291906102f0565b60405180910390f35b3480156100a157600080fd5b506100aa610163565b6040516100b79190610319565b60405180910390f35b3480156100cc57600080fd5b506100d561016b565b6040516100e29190610375565b60405180910390f35b3480156100f757600080fd5b50610100610191565b60405161010d9190610375565b60405180910390f35b34801561012257600080fd5b5061013d600480360381019061013891906103e8565b6101b5565b60405161014a9190610319565b60405180910390f35b6000805a83145a91509150915091565b60005a905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633370204e836040518263ffffffff1660e01b81526004016102129190610424565b6020604051808303816000875af1158015610231573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610255919061046b565b505a9050919050565b600080fd5b6000819050919050565b61027681610263565b811461028157600080fd5b50565b6000813590506102938161026d565b92915050565b6000602082840312156102af576102ae61025e565b5b60006102bd84828501610284565b91505092915050565b60008115159050919050565b6102db816102c6565b82525050565b6102ea81610263565b82525050565b600060408201905061030560008301856102d2565b61031260208301846102e1565b9392505050565b600060208201905061032e60008301846102e1565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035f82610334565b9050919050565b61036f81610354565b82525050565b600060208201905061038a6000830184610366565b92915050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b6103c581610390565b81146103d057600080fd5b50565b6000813590506103e2816103bc565b92915050565b6000602082840312156103fe576103fd61025e565b5b600061040c848285016103d3565b91505092915050565b61041e81610390565b82525050565b60006020820190506104396000830184610415565b92915050565b610448816102c6565b811461045357600080fd5b50565b6000815190506104658161043f565b92915050565b6000602082840312156104815761048061025e565b5b600061048f84828501610456565b9150509291505056fea26469706673582212208c1df9ccbfe1cdcdb9a20e97f5ff9d2190e6bc583e8986fe16d66268a692b8fa64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xDBC7C99FE6B538631473060E8C2FBA627611D635 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CE DUP1 PUSH2 0xD8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AE1EA81 EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x51BE4EAA EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x9DB31D77 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xDFDB29E5 EQ PUSH2 0x116 JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x299 JUMP JUMPDEST PUSH2 0x153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP3 SWAP2 SWAP1 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 GAS DUP4 EQ GAS SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 GAS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3370204E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x231 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x46B JUMP JUMPDEST POP GAS SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH2 0x263 JUMP JUMPDEST DUP2 EQ PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x293 DUP2 PUSH2 0x26D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF JUMPI PUSH2 0x2AE PUSH2 0x25E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BD DUP5 DUP3 DUP6 ADD PUSH2 0x284 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x2C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2EA DUP2 PUSH2 0x263 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x305 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x312 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F DUP3 PUSH2 0x334 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x354 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C5 DUP2 PUSH2 0x390 JUMP JUMPDEST DUP2 EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E2 DUP2 PUSH2 0x3BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FE JUMPI PUSH2 0x3FD PUSH2 0x25E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP5 DUP3 DUP6 ADD PUSH2 0x3D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x41E DUP2 PUSH2 0x390 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x439 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x2C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x465 DUP2 PUSH2 0x43F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x481 JUMPI PUSH2 0x480 PUSH2 0x25E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48F DUP5 DUP3 DUP6 ADD PUSH2 0x456 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 SAR 0xF9 0xCC 0xBF 0xE1 0xCD 0xCD 0xB9 LOG2 0xE SWAP8 CREATE2 SELFDESTRUCT SWAP14 0x21 SWAP1 0xE6 0xBC PC RETURNDATACOPY DUP10 DUP7 INVALID AND 0xD6 PUSH3 0x68A692 0xB8 STATICCALL PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "205:1172:1:-:0;;;328:42;310:60;;;;;;;;;;;;;;;;;;;;412:7;;;;;;;;;;;377:43;;;;;;;;;;;;;;;;;;;;205:1172;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_387": {
									"entryPoint": null,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_391": {
									"entryPoint": null,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@call_383": {
									"entryPoint": 437,
									"id": 383,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@entrant_327": {
									"entryPoint": 401,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getGasLeft_347": {
									"entryPoint": 355,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isEqualGasLeft_365": {
									"entryPoint": 339,
									"id": 365,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@owner_329": {
									"entryPoint": 363,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes8": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes8": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes8_to_t_bytes8_fromStack": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 752,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes8__to_t_bytes8__fromStack_reversed": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes8": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes8": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4215:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1067:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1077:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1102:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1049:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1059:7:2",
														"type": ""
													}
												],
												"src": "1025:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1180:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1197:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1202:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1202:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1190:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1168:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1175:3:2",
														"type": ""
													}
												],
												"src": "1121:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1301:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1318:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1341:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1323:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1311:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1311:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1289:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1296:3:2",
														"type": ""
													}
												],
												"src": "1236:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1480:200:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1490:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1502:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1513:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1498:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1490:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1564:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1577:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1588:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1573:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1573:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1526:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1526:65:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1658:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1669:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1654:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1654:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1601:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1601:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1444:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1456:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1464:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1475:4:2",
														"type": ""
													}
												],
												"src": "1360:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1784:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1794:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1806:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1817:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1794:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1874:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1887:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1898:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1883:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1830:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1830:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1830:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1756:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1768:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1779:4:2",
														"type": ""
													}
												],
												"src": "1686:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1959:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1969:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1984:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1991:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1969:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1941:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1951:7:2",
														"type": ""
													}
												],
												"src": "1914:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2091:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2101:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2130:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2112:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2101:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2073:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2083:7:2",
														"type": ""
													}
												],
												"src": "2046:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2213:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2230:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2253:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2235:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2235:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2223:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2223:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2201:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2208:3:2",
														"type": ""
													}
												],
												"src": "2148:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2370:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2380:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2392:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2403:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2388:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2380:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2460:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2473:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2484:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2469:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2469:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2416:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2416:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2416:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2342:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2354:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2365:4:2",
														"type": ""
													}
												],
												"src": "2272:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:105:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2554:89:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2576:66:2",
																		"type": "",
																		"value": "0xffffffffffffffff000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2565:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:78:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2554:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2526:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2536:7:2",
														"type": ""
													}
												],
												"src": "2500:149:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2697:78:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2753:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2720:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes8",
																					"nodeType": "YulIdentifier",
																					"src": "2727:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2727:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2717:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2717:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:42:2"
															},
															"nodeType": "YulIf",
															"src": "2707:62:2"
														}
													]
												},
												"name": "validator_revert_t_bytes8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2690:5:2",
														"type": ""
													}
												],
												"src": "2655:120:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2832:86:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2842:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2864:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2851:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2842:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2906:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes8",
																	"nodeType": "YulIdentifier",
																	"src": "2880:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2880:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2880:32:2"
														}
													]
												},
												"name": "abi_decode_t_bytes8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2810:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2818:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2826:5:2",
														"type": ""
													}
												],
												"src": "2781:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2989:262:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3035:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3037:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3037:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3037:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3010:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3019:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3006:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3002:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:32:2"
															},
															"nodeType": "YulIf",
															"src": "2999:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3128:116:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3143:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3157:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3147:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3172:62:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3206:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3217:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3202:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3202:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3226:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes8",
																			"nodeType": "YulIdentifier",
																			"src": "3182:19:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:52:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3172:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2959:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2970:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2982:6:2",
														"type": ""
													}
												],
												"src": "2924:327:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3320:52:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3337:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3359:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes8",
																			"nodeType": "YulIdentifier",
																			"src": "3342:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3342:23:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3330:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3330:36:2"
														}
													]
												},
												"name": "abi_encode_t_bytes8_to_t_bytes8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3308:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3315:3:2",
														"type": ""
													}
												],
												"src": "3257:115:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3474:122:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3484:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3496:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3507:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3492:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3484:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3562:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3575:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3586:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3571:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3571:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes8_to_t_bytes8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3520:41:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:69:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3520:69:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes8__to_t_bytes8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3446:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3458:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3469:4:2",
														"type": ""
													}
												],
												"src": "3378:218:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3642:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3696:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3705:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3708:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3698:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3698:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3698:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3665:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3687:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3672:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3672:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3662:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3662:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3655:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3655:40:2"
															},
															"nodeType": "YulIf",
															"src": "3652:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3635:5:2",
														"type": ""
													}
												],
												"src": "3602:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3784:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3794:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3809:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3803:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3803:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3794:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3849:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3825:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3825:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3825:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3762:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3770:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3778:5:2",
														"type": ""
													}
												],
												"src": "3724:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3941:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3987:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3989:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3989:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3989:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3962:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3971:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3958:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3958:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3954:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3954:32:2"
															},
															"nodeType": "YulIf",
															"src": "3951:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4080:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4095:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4109:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4099:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4124:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4167:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4178:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4163:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4163:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4187:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4134:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4134:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4124:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3911:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3922:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3934:6:2",
														"type": ""
													}
												],
												"src": "3867:345:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes8(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes8(value) {\n        if iszero(eq(value, cleanup_t_bytes8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes8(value)\n    }\n\n    function abi_decode_tuple_t_bytes8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes8_to_t_bytes8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes8(value))\n    }\n\n    function abi_encode_tuple_t_bytes8__to_t_bytes8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes8_to_t_bytes8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c80633ae1ea811461005757806351be4eaa146100955780638da5cb5b146100c05780639db31d77146100eb578063dfdb29e51461011657610055565b3661005557005b005b34801561006357600080fd5b5061007e60048036038101906100799190610299565b610153565b60405161008c9291906102f0565b60405180910390f35b3480156100a157600080fd5b506100aa610163565b6040516100b79190610319565b60405180910390f35b3480156100cc57600080fd5b506100d561016b565b6040516100e29190610375565b60405180910390f35b3480156100f757600080fd5b50610100610191565b60405161010d9190610375565b60405180910390f35b34801561012257600080fd5b5061013d600480360381019061013891906103e8565b6101b5565b60405161014a9190610319565b60405180910390f35b6000805a83145a91509150915091565b60005a905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633370204e836040518263ffffffff1660e01b81526004016102129190610424565b6020604051808303816000875af1158015610231573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610255919061046b565b505a9050919050565b600080fd5b6000819050919050565b61027681610263565b811461028157600080fd5b50565b6000813590506102938161026d565b92915050565b6000602082840312156102af576102ae61025e565b5b60006102bd84828501610284565b91505092915050565b60008115159050919050565b6102db816102c6565b82525050565b6102ea81610263565b82525050565b600060408201905061030560008301856102d2565b61031260208301846102e1565b9392505050565b600060208201905061032e60008301846102e1565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035f82610334565b9050919050565b61036f81610354565b82525050565b600060208201905061038a6000830184610366565b92915050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b6103c581610390565b81146103d057600080fd5b50565b6000813590506103e2816103bc565b92915050565b6000602082840312156103fe576103fd61025e565b5b600061040c848285016103d3565b91505092915050565b61041e81610390565b82525050565b60006020820190506104396000830184610415565b92915050565b610448816102c6565b811461045357600080fd5b50565b6000815190506104658161043f565b92915050565b6000602082840312156104815761048061025e565b5b600061048f84828501610456565b9150509291505056fea26469706673582212208c1df9ccbfe1cdcdb9a20e97f5ff9d2190e6bc583e8986fe16d66268a692b8fa64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AE1EA81 EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x51BE4EAA EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x9DB31D77 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xDFDB29E5 EQ PUSH2 0x116 JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x299 JUMP JUMPDEST PUSH2 0x153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP3 SWAP2 SWAP1 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 GAS DUP4 EQ GAS SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 GAS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3370204E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x231 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x46B JUMP JUMPDEST POP GAS SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH2 0x263 JUMP JUMPDEST DUP2 EQ PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x293 DUP2 PUSH2 0x26D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF JUMPI PUSH2 0x2AE PUSH2 0x25E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BD DUP5 DUP3 DUP6 ADD PUSH2 0x284 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x2C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2EA DUP2 PUSH2 0x263 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x305 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x312 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F DUP3 PUSH2 0x334 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x354 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C5 DUP2 PUSH2 0x390 JUMP JUMPDEST DUP2 EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E2 DUP2 PUSH2 0x3BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FE JUMPI PUSH2 0x3FD PUSH2 0x25E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP5 DUP3 DUP6 ADD PUSH2 0x3D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x41E DUP2 PUSH2 0x390 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x439 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x2C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x465 DUP2 PUSH2 0x43F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x481 JUMPI PUSH2 0x480 PUSH2 0x25E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48F DUP5 DUP3 DUP6 ADD PUSH2 0x456 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 SAR 0xF9 0xCC 0xBF 0xE1 0xCD 0xCD 0xB9 LOG2 0xE SWAP8 CREATE2 SELFDESTRUCT SWAP14 0x21 SWAP1 0xE6 0xBC PC RETURNDATACOPY DUP10 DUP7 INVALID AND 0xD6 PUSH3 0x68A692 0xB8 STATICCALL PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "205:1172:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:121;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;431:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;285:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;258:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;654:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;525:121;580:4;586;617:9;610:3;:16;628:9;602:36;;;;525:121;;;:::o;431:82::-;472:4;496:9;489:16;;431:82;:::o;285:20::-;;;;;;;;;;;;;:::o;258:22::-;;;;;;;;;;;;:::o;654:108::-;695:4;709;;;;;;;;;;;:10;;;720:4;709:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;744:9;736:18;;654:108;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:118::-;1323:24;1341:5;1323:24;:::i;:::-;1318:3;1311:37;1236:118;;:::o;1360:320::-;1475:4;1513:2;1502:9;1498:18;1490:26;;1526:65;1588:1;1577:9;1573:17;1564:6;1526:65;:::i;:::-;1601:72;1669:2;1658:9;1654:18;1645:6;1601:72;:::i;:::-;1360:320;;;;;:::o;1686:222::-;1779:4;1817:2;1806:9;1802:18;1794:26;;1830:71;1898:1;1887:9;1883:17;1874:6;1830:71;:::i;:::-;1686:222;;;;:::o;1914:126::-;1951:7;1991:42;1984:5;1980:54;1969:65;;1914:126;;;:::o;2046:96::-;2083:7;2112:24;2130:5;2112:24;:::i;:::-;2101:35;;2046:96;;;:::o;2148:118::-;2235:24;2253:5;2235:24;:::i;:::-;2230:3;2223:37;2148:118;;:::o;2272:222::-;2365:4;2403:2;2392:9;2388:18;2380:26;;2416:71;2484:1;2473:9;2469:17;2460:6;2416:71;:::i;:::-;2272:222;;;;:::o;2500:149::-;2536:7;2576:66;2569:5;2565:78;2554:89;;2500:149;;;:::o;2655:120::-;2727:23;2744:5;2727:23;:::i;:::-;2720:5;2717:34;2707:62;;2765:1;2762;2755:12;2707:62;2655:120;:::o;2781:137::-;2826:5;2864:6;2851:20;2842:29;;2880:32;2906:5;2880:32;:::i;:::-;2781:137;;;;:::o;2924:327::-;2982:6;3031:2;3019:9;3010:7;3006:23;3002:32;2999:119;;;3037:79;;:::i;:::-;2999:119;3157:1;3182:52;3226:7;3217:6;3206:9;3202:22;3182:52;:::i;:::-;3172:62;;3128:116;2924:327;;;;:::o;3257:115::-;3342:23;3359:5;3342:23;:::i;:::-;3337:3;3330:36;3257:115;;:::o;3378:218::-;3469:4;3507:2;3496:9;3492:18;3484:26;;3520:69;3586:1;3575:9;3571:17;3562:6;3520:69;:::i;:::-;3378:218;;;;:::o;3602:116::-;3672:21;3687:5;3672:21;:::i;:::-;3665:5;3662:32;3652:60;;3708:1;3705;3698:12;3652:60;3602:116;:::o;3724:137::-;3778:5;3809:6;3803:13;3794:22;;3825:30;3849:5;3825:30;:::i;:::-;3724:137;;;;:::o;3867:345::-;3934:6;3983:2;3971:9;3962:7;3958:23;3954:32;3951:119;;;3989:79;;:::i;:::-;3951:119;4109:1;4134:61;4187:7;4178:6;4167:9;4163:22;4134:61;:::i;:::-;4124:71;;4080:125;3867:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "246000",
								"executionCost": "50957",
								"totalCost": "296957"
							},
							"external": {
								"": "173",
								"call(bytes8)": "infinite",
								"entrant()": "2555",
								"getGasLeft()": "336",
								"isEqualGasLeft(uint256)": "infinite",
								"owner()": "2536"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 205,
									"end": 1377,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 328,
									"end": 370,
									"name": "PUSH",
									"source": 1,
									"value": "DBC7C99FE6B538631473060E8C2FBA627611D635"
								},
								{
									"begin": 310,
									"end": 370,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 310,
									"end": 370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 370,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 310,
									"end": 370,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 310,
									"end": 370,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 310,
									"end": 370,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 310,
									"end": 370,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 412,
									"end": 419,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 412,
									"end": 419,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 419,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 412,
									"end": 419,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 419,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 412,
									"end": 419,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 412,
									"end": 419,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 412,
									"end": 419,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 412,
									"end": 419,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 412,
									"end": 419,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 412,
									"end": 419,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 377,
									"end": 420,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 420,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 377,
									"end": 420,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 377,
									"end": 420,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 377,
									"end": 420,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 377,
									"end": 420,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 1377,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208c1df9ccbfe1cdcdb9a20e97f5ff9d2190e6bc583e8986fe16d66268a692b8fa64736f6c634300080f0033",
									".code": [
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "3AE1EA81"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "51BE4EAA"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "9DB31D77"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "DFDB29E5"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1377,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 525,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 525,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 525,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 431,
											"end": 513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 513,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 431,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 513,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 431,
											"end": 513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 431,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 431,
											"end": 513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 513,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 285,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 285,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 258,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 258,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 654,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 654,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 654,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 525,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 626,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 610,
											"end": 613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 610,
											"end": 626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 637,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 602,
											"end": 638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 602,
											"end": 638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 602,
											"end": 638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 431,
											"end": 513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 472,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 505,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 489,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 431,
											"end": 513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 285,
											"end": 305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 285,
											"end": 305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 258,
											"end": 280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 258,
											"end": 280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 654,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 695,
											"end": 699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 713,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 713,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 709,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 709,
											"end": 719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 709,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "3370204E"
										},
										{
											"begin": 720,
											"end": 724,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 709,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 709,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 709,
											"end": 725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 744,
											"end": 753,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 736,
											"end": 754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1202,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1354,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1236,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1323,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1347,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1323,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1321,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1348,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1680,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1360,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1515,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1570,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1526,
											"end": 1591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1591,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1526,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1669,
											"end": 1671,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1667,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1601,
											"end": 1673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1673,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1601,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1680,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1680,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1908,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1686,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1794,
											"end": 1820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1794,
											"end": 1820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1898,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 1900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1830,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1901,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1908,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1908,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2040,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1914,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1984,
											"end": 1989,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2142,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2046,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2112,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2142,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2266,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2148,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2253,
											"end": 2258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2235,
											"end": 2259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2233,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2486,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2416,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2642,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2643,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2643,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2775,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2655,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2744,
											"end": 2749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2727,
											"end": 2750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2720,
											"end": 2725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2751,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2707,
											"end": 2769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2767,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2769,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2707,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2918,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2781,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2906,
											"end": 2911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2880,
											"end": 2912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2918,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3251,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2924,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3017,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3029,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3034,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3037,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3157,
											"end": 3158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3226,
											"end": 3233,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3215,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3182,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3234,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3182,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3251,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3372,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3257,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3359,
											"end": 3364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3342,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3365,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3342,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3340,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3596,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3378,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3586,
											"end": 3587,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3571,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3568,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3520,
											"end": 3589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3589,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3520,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3596,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3596,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3687,
											"end": 3692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3672,
											"end": 3693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3693,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3672,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3670,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3652,
											"end": 3712,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3706,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3712,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3652,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 3718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3794,
											"end": 3816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3794,
											"end": 3816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3849,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3825,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 3985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3971,
											"end": 3980,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3958,
											"end": 3981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3954,
											"end": 3986,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4070,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3951,
											"end": 4070,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3989,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3989,
											"end": 4068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4068,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3989,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4070,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3951,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4187,
											"end": 4194,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4176,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4134,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4134,
											"end": 4195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4134,
											"end": 4195,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4134,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Hak.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"call(bytes8)": "dfdb29e5",
							"entrant()": "9db31d77",
							"getGasLeft()": "51be4eaa",
							"isEqualGasLeft(uint256)": "3ae1ea81",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"_jma\",\"type\":\"bytes8\"}],\"name\":\"call\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entrant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_kk\",\"type\":\"uint256\"}],\"name\":\"isEqualGasLeft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hak.sol\":\"Hak\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/Hak.sol\":{\"keccak256\":\"0x45ad97a9b4128403713ca6812c7ab5c87990e522c40d2ae570b86059d7b548ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09d06c4c3c34603a31771dbddaf7e4d76996f9c14874965013b9296d5d394789\",\"dweb:/ipfs/QmdG3BS7sVVRWFU3KRjEekwj7FyAAvLFMEmyzKc2SFnNr2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 327,
								"contract": "contracts/Hak.sol:Hak",
								"label": "entrant",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 329,
								"contract": "contracts/Hak.sol:Hak",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 332,
								"contract": "contracts/Hak.sol:Hak",
								"label": "hisAddr",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 338,
								"contract": "contracts/Hak.sol:Hak",
								"label": "gone",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(GatekeeperOne)322"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(GatekeeperOne)322": {
								"encoding": "inplace",
								"label": "contract GatekeeperOne",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"contracts/Hak.sol": {
				"ast": {
					"absolutePath": "contracts/Hak.sol",
					"exportedSymbols": {
						"GatekeeperOne": [
							322
						],
						"Hak": [
							392
						],
						"SafeMath": [
							311
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 312,
							"src": "60:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GatekeeperOne",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 322,
							"linearizedBaseContracts": [
								322
							],
							"name": "GatekeeperOne",
							"nameLocation": "131:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3370204e",
									"id": 321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enter",
									"nameLocation": "160:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "166:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 315,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "166:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:8:1"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "192:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "192:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:6:1"
									},
									"scope": 322,
									"src": "151:47:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "121:80:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Hak",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "Hak",
							"nameLocation": "214:3:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 325,
									"libraryName": {
										"id": 323,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "233:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "227:27:1",
									"typeName": {
										"id": 324,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "246:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "9db31d77",
									"id": 327,
									"mutability": "mutable",
									"name": "entrant",
									"nameLocation": "273:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "258:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 326,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "258:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 329,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "300:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "285:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 328,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "hisAddr",
									"nameLocation": "318:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "310:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 330,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "310:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307864426337633939664536423533383633313437333036304538433246424136323736313164363335",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "328:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xdBc7c99fE6B538631473060E8C2FBA627611d635"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "gone",
									"nameLocation": "391:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "377:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_GatekeeperOne_$322",
										"typeString": "contract GatekeeperOne"
									},
									"typeName": {
										"id": 334,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 333,
											"name": "GatekeeperOne",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 322,
											"src": "377:13:1"
										},
										"referencedDeclaration": 322,
										"src": "377:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_GatekeeperOne_$322",
											"typeString": "contract GatekeeperOne"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 336,
												"name": "hisAddr",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 332,
												"src": "412:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 335,
											"name": "GatekeeperOne",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 322,
											"src": "398:13:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_GatekeeperOne_$322_$",
												"typeString": "type(contract GatekeeperOne)"
											}
										},
										"id": 337,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "398:22:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_GatekeeperOne_$322",
											"typeString": "contract GatekeeperOne"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "478:35:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 343,
														"name": "gasleft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967289,
														"src": "496:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "496:9:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 342,
												"id": 345,
												"nodeType": "Return",
												"src": "489:16:1"
											}
										]
									},
									"functionSelector": "51be4eaa",
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGasLeft",
									"nameLocation": "440:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:2:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "472:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:6:1"
									},
									"scope": 392,
									"src": "431:82:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "591:55:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "_kk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "610:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 357,
																	"name": "gasleft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967289,
																	"src": "617:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "617:9:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "610:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 360,
																"name": "gasleft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967289,
																"src": "628:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "628:9:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 362,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "609:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 355,
												"id": 363,
												"nodeType": "Return",
												"src": "602:36:1"
											}
										]
									},
									"functionSelector": "3ae1ea81",
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isEqualGasLeft",
									"nameLocation": "534:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "_kk",
												"nameLocation": "555:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "549:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "549:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:11:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "580:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "580:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "586:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:12:1"
									},
									"scope": 392,
									"src": "525:121:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "700:62:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "_jma",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "720:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														],
														"expression": {
															"id": 372,
															"name": "gone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "709:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GatekeeperOne_$322",
																"typeString": "contract GatekeeperOne"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "enter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 321,
														"src": "709:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes8_$returns$_t_bool_$",
															"typeString": "function (bytes8) external returns (bool)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "709:16:1"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 378,
																"name": "gasleft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967289,
																"src": "744:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "744:9:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 380,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "743:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 371,
												"id": 381,
												"nodeType": "Return",
												"src": "736:18:1"
											}
										]
									},
									"functionSelector": "dfdb29e5",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "call",
									"nameLocation": "663:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "_jma",
												"nameLocation": "675:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "668:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 366,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "668:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:13:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "695:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:6:1"
									},
									"scope": 392,
									"src": "654:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "792:2:1",
										"statements": []
									},
									"id": 387,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:1"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "792:0:1"
									},
									"scope": 392,
									"src": "766:28:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "825:2:1",
										"statements": []
									},
									"id": 391,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "806:2:1"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "825:0:1"
									},
									"scope": 392,
									"src": "798:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "205:1172:1",
							"usedErrors": []
						}
					],
					"src": "33:1344:1"
				},
				"id": 1
			}
		}
	}
}