{
	"id": "9ba4ed83b9b724d7476a1c6228ed2f2a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GatekeeperTwo.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\ncontract GatekeeperTwo {\r\n\r\n  address public entrant;\r\n\r\n  modifier gateOne() {\r\n    require(msg.sender != tx.origin);\r\n    _;\r\n  }\r\n\r\n  modifier gateTwo() {\r\n    uint x;\r\n    assembly { x := extcodesize(caller()) }\r\n    require(x == 0);\r\n    _;\r\n  }\r\n\r\n  modifier gateThree(bytes8 _gateKey) {\r\n    require(uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == uint64(0) - 1);\r\n    _;\r\n  }\r\n\r\n    function getextcodesize() public  returns(uint) {\r\n    uint x;\r\n    assembly { x := extcodesize(caller()) }\r\n    return(x );\r\n    \r\n  }\r\n\r\n  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\r\n    entrant = tx.origin;\r\n    return true;\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/GatekeeperTwo.sol": {
				"GatekeeperTwo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes8",
									"name": "_gateKey",
									"type": "bytes8"
								}
							],
							"name": "enter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "entrant",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getextcodesize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GatekeeperTwo.sol\":60:765  contract GatekeeperTwo {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GatekeeperTwo.sol\":60:765  contract GatekeeperTwo {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1c80e4bb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3370204e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9db31d77\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/GatekeeperTwo.sol\":481:616  function getextcodesize() public  returns(uint) {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GatekeeperTwo.sol\":622:762  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\r... */\n    tag_4:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GatekeeperTwo.sol\":90:112  address public entrant */\n    tag_5:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GatekeeperTwo.sol\":481:616  function getextcodesize() public  returns(uint) {\r... */\n    tag_7:\n        /* \"contracts/GatekeeperTwo.sol\":523:527  uint */\n      0x00\n        /* \"contracts/GatekeeperTwo.sol\":536:542  uint x */\n      dup1\n        /* \"contracts/GatekeeperTwo.sol\":577:585  caller() */\n      caller\n        /* \"contracts/GatekeeperTwo.sol\":565:586  extcodesize(caller()) */\n      extcodesize\n        /* \"contracts/GatekeeperTwo.sol\":560:586  x := extcodesize(caller()) */\n      swap1\n      pop\n        /* \"contracts/GatekeeperTwo.sol\":601:602  x */\n      dup1\n        /* \"contracts/GatekeeperTwo.sol\":594:604  return(x ) */\n      swap2\n      pop\n      pop\n        /* \"contracts/GatekeeperTwo.sol\":481:616  function getextcodesize() public  returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/GatekeeperTwo.sol\":622:762  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\r... */\n    tag_10:\n        /* \"contracts/GatekeeperTwo.sol\":706:710  bool */\n      0x00\n        /* \"contracts/GatekeeperTwo.sol\":167:176  tx.origin */\n      origin\n        /* \"contracts/GatekeeperTwo.sol\":153:176  msg.sender != tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GatekeeperTwo.sol\":153:163  msg.sender */\n      caller\n        /* \"contracts/GatekeeperTwo.sol\":153:176  msg.sender != tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/GatekeeperTwo.sol\":145:177  require(msg.sender != tx.origin) */\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n        /* \"contracts/GatekeeperTwo.sol\":223:229  uint x */\n      0x00\n        /* \"contracts/GatekeeperTwo.sol\":264:272  caller() */\n      caller\n        /* \"contracts/GatekeeperTwo.sol\":252:273  extcodesize(caller()) */\n      extcodesize\n        /* \"contracts/GatekeeperTwo.sol\":247:273  x := extcodesize(caller()) */\n      swap1\n      pop\n        /* \"contracts/GatekeeperTwo.sol\":294:295  0 */\n      0x00\n        /* \"contracts/GatekeeperTwo.sol\":289:290  x */\n      dup2\n        /* \"contracts/GatekeeperTwo.sol\":289:295  x == 0 */\n      eq\n        /* \"contracts/GatekeeperTwo.sol\":281:296  require(x == 0) */\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n        /* \"contracts/GatekeeperTwo.sol\":687:695  _gateKey */\n      dup3\n        /* \"contracts/GatekeeperTwo.sol\":457:458  1 */\n      0x01\n        /* \"contracts/GatekeeperTwo.sol\":452:453  0 */\n      0x00\n        /* \"contracts/GatekeeperTwo.sol\":445:458  uint64(0) - 1 */\n      sub\n        /* \"contracts/GatekeeperTwo.sol\":367:458  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == uint64(0) - 1 */\n      0xffffffffffffffff\n      and\n        /* \"contracts/GatekeeperTwo.sol\":432:440  _gateKey */\n      dup2\n        /* \"contracts/GatekeeperTwo.sol\":425:441  uint64(_gateKey) */\n      0xc0\n      shr\n        /* \"contracts/GatekeeperTwo.sol\":408:418  msg.sender */\n      caller\n        /* \"contracts/GatekeeperTwo.sol\":391:419  abi.encodePacked(msg.sender) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/GatekeeperTwo.sol\":381:420  keccak256(abi.encodePacked(msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/GatekeeperTwo.sol\":367:422  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) */\n      0xc0\n      shr\n        /* \"contracts/GatekeeperTwo.sol\":367:441  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) */\n      xor\n        /* \"contracts/GatekeeperTwo.sol\":367:458  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == uint64(0) - 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"contracts/GatekeeperTwo.sol\":359:459  require(uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == uint64(0) - 1) */\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n        /* \"contracts/GatekeeperTwo.sol\":729:738  tx.origin */\n      origin\n        /* \"contracts/GatekeeperTwo.sol\":719:726  entrant */\n      0x00\n      dup1\n        /* \"contracts/GatekeeperTwo.sol\":719:738  entrant = tx.origin */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/GatekeeperTwo.sol\":752:756  true */\n      0x01\n        /* \"contracts/GatekeeperTwo.sol\":745:756  return true */\n      swap3\n      pop\n        /* \"contracts/GatekeeperTwo.sol\":303:304  _ */\n      pop\n        /* \"contracts/GatekeeperTwo.sol\":184:185  _ */\n      pop\n        /* \"contracts/GatekeeperTwo.sol\":622:762  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/GatekeeperTwo.sol\":90:112  address public entrant */\n    tag_12:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa264697066735822122086e38d2b0dc205031de38837e08d7f135d6bb61f42576424bb0097ea49c2a25964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610264806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631c80e4bb146100465780633370204e146100645780639db31d77146100c3575b600080fd5b61004e6100f7565b6040518082815260200191505060405180910390f35b6100ab6004803603602081101561007a57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610105565b60405180821515815260200191505060405180910390f35b6100cb61020a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080333b90508091505090565b60003273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561014057600080fd5b6000333b90506000811461015357600080fd5b82600160000367ffffffffffffffff168160c01c33604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1867ffffffffffffffff16146101bf57600080fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600192505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122086e38d2b0dc205031de38837e08d7f135d6bb61f42576424bb0097ea49c2a25964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1C80E4BB EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3370204E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x9DB31D77 EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER EXTCODESIZE SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 SUB PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 SHR CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xE3 DUP14 0x2B 0xD 0xC2 SDIV SUB SAR 0xE3 DUP9 CALLDATACOPY 0xE0 DUP14 PUSH32 0x135D6BB61F42576424BB0097EA49C2A25964736F6C634300060C003300000000 ",
							"sourceMap": "60:705:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80631c80e4bb146100465780633370204e146100645780639db31d77146100c3575b600080fd5b61004e6100f7565b6040518082815260200191505060405180910390f35b6100ab6004803603602081101561007a57600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610105565b60405180821515815260200191505060405180910390f35b6100cb61020a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080333b90508091505090565b60003273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561014057600080fd5b6000333b90506000811461015357600080fd5b82600160000367ffffffffffffffff168160c01c33604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1867ffffffffffffffff16146101bf57600080fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600192505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122086e38d2b0dc205031de38837e08d7f135d6bb61f42576424bb0097ea49c2a25964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1C80E4BB EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3370204E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x9DB31D77 EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER EXTCODESIZE SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 SUB PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 SHR CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xE3 DUP14 0x2B 0xD 0xC2 SDIV SUB SAR 0xE3 DUP9 CALLDATACOPY 0xE0 DUP14 PUSH32 0x135D6BB61F42576424BB0097EA49C2A25964736F6C634300060C003300000000 ",
							"sourceMap": "60:705:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;481:135;;;:::i;:::-;;;;;;;;;;;;;;;;;;;622:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;90:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;481:135;523:4;536:6;577:8;565:21;560:26;;601:1;594:10;;;481:135;:::o;622:140::-;706:4;167:9;153:23;;:10;:23;;;;145:32;;;;;;223:6:::1;264:8;252:21;247:26;;294:1;289;:6;281:15;;;::::0;::::1;;687:8:::2;457:1;452;445:13;367:91;;432:8;425:16;;408:10;391:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;381:39;;;;;;367:55;;:74;:91;;;359:100;;;::::0;::::2;;729:9:::3;719:7;::::0;:19:::3;;;;;;;;;;;;;;;;;;752:4;745:11;;303:1:::2;184::::1;622:140:::0;;;:::o;90:22::-;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "122400",
								"executionCost": "171",
								"totalCost": "122571"
							},
							"external": {
								"enter(bytes8)": "22157",
								"entrant()": "1066",
								"getextcodesize()": "903"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 765,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 765,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 765,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 765,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 765,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 765,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 765,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 765,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 765,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 765,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 765,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 765,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 765,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086e38d2b0dc205031de38837e08d7f135d6bb61f42576424bb0097ea49c2a25964736f6c634300060c0033",
									".code": [
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "1C80E4BB"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "3370204E"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "9DB31D77"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 481,
											"end": 616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 481,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 481,
											"end": 616,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 481,
											"end": 616,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 481,
											"end": 616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 481,
											"end": 616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 481,
											"end": 616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 585,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 565,
											"end": 586,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 560,
											"end": 586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 616,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 622,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 706,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 176,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 153,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 153,
											"end": 163,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 153,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 145,
											"end": 177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 145,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 272,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 252,
											"end": 273,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 294,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 289,
											"end": 295,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 281,
											"end": 296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 281,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 457,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 452,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 367,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 432,
											"end": 440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 441,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 425,
											"end": 441,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 408,
											"end": 418,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 381,
											"end": 420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 381,
											"end": 420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 381,
											"end": 420,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 367,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 367,
											"end": 422,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 367,
											"end": 441,
											"name": "XOR",
											"source": 0
										},
										{
											"begin": 367,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 367,
											"end": 458,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 359,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 359,
											"end": 459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 359,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 359,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 359,
											"end": 459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 359,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 359,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 738,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 719,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 719,
											"end": 738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 752,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 756,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 745,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 762,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"enter(bytes8)": "3370204e",
							"entrant()": "9db31d77",
							"getextcodesize()": "1c80e4bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"_gateKey\",\"type\":\"bytes8\"}],\"name\":\"enter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entrant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getextcodesize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GatekeeperTwo.sol\":\"GatekeeperTwo\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GatekeeperTwo.sol\":{\"keccak256\":\"0xff04af1cdce3ef2b39902141c7def144808df62e00c3d32698c3f70e54df004a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c9310f74fcc655fd0f8b193f39bdb84e7d408300d44321af3f3342df70d2f6c\",\"dweb:/ipfs/QmZBoVkpHSn5NATd92vM2QJLa6s3trPq9WGAtPiMoV4TaH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/GatekeeperTwo.sol:GatekeeperTwo",
								"label": "entrant",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "contracts/GatekeeperTwo.sol:25:5: Warning: Function state mutability can be restricted to view\n    function getextcodesize() public  returns(uint) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 616,
					"file": "contracts/GatekeeperTwo.sol",
					"start": 481
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/GatekeeperTwo.sol": {
				"ast": {
					"absolutePath": "contracts/GatekeeperTwo.sol",
					"exportedSymbols": {
						"GatekeeperTwo": [
							99
						]
					},
					"id": 100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "GatekeeperTwo",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9db31d77",
									"id": 3,
									"mutability": "mutable",
									"name": "entrant",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 99,
									"src": "90:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "90:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "138:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 6,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "153:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 7,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "153:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 8,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -26,
																	"src": "167:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 9,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "167:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "153:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 5,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "145:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "145:32:0"
											},
											{
												"id": 13,
												"nodeType": "PlaceholderStatement",
												"src": "184:1:0"
											}
										]
									},
									"documentation": null,
									"id": 15,
									"name": "gateOne",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "135:2:0"
									},
									"src": "119:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "216:94:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "x",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 28,
														"src": "223:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "223:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "223:6:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "245:30:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "247:26:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "264:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "264:8:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "252:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:21:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "247:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 18,
														"isOffset": false,
														"isSlot": false,
														"src": "247:1:0",
														"valueSize": 1
													}
												],
												"id": 20,
												"nodeType": "InlineAssembly",
												"src": "236:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 22,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "289:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "294:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "281:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "281:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "281:15:0"
											},
											{
												"id": 27,
												"nodeType": "PlaceholderStatement",
												"src": "303:1:0"
											}
										]
									},
									"documentation": null,
									"id": 29,
									"name": "gateTwo",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "213:2:0"
									},
									"src": "197:113:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "352:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"expression": {
																										"argumentTypes": null,
																										"id": 41,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": -15,
																										"src": "408:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 42,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": null,
																									"src": "408:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"id": 39,
																									"name": "abi",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": -1,
																									"src": "391:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_abi",
																										"typeString": "abi"
																									}
																								},
																								"id": 40,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberName": "encodePacked",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "391:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																									"typeString": "function () pure returns (bytes memory)"
																								}
																							},
																							"id": 43,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "391:28:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 38,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "381:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 44,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "381:39:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 37,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "374:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes8_$",
																					"typeString": "type(bytes8)"
																				},
																				"typeName": {
																					"id": 36,
																					"name": "bytes8",
																					"nodeType": "ElementaryTypeName",
																					"src": "374:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "374:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		],
																		"id": 35,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "367:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 34,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "367:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "367:55:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "^",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 49,
																			"name": "_gateKey",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 31,
																			"src": "432:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		],
																		"id": 48,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "425:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 47,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "425:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "425:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "367:74:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 54,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "452:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 53,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "445:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 52,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "445:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "445:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "457:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "445:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "367:91:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "359:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "359:100:0"
											},
											{
												"id": 61,
												"nodeType": "PlaceholderStatement",
												"src": "466:1:0"
											}
										]
									},
									"documentation": null,
									"id": 63,
									"name": "gateThree",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "_gateKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "335:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 30,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "334:17:0"
									},
									"src": "316:157:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "529:87:0",
										"statements": [
											{
												"assignments": [
													69
												],
												"declarations": [
													{
														"constant": false,
														"id": 69,
														"mutability": "mutable",
														"name": "x",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 75,
														"src": "536:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 68,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 70,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "536:6:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "558:30:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "560:26:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "577:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "577:8:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "565:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:21:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "560:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 69,
														"isOffset": false,
														"isSlot": false,
														"src": "560:1:0",
														"valueSize": 1
													}
												],
												"id": 71,
												"nodeType": "InlineAssembly",
												"src": "549:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 72,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "601:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 73,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "600:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 67,
												"id": 74,
												"nodeType": "Return",
												"src": "594:10:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1c80e4bb",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getextcodesize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "504:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "523:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "523:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "522:6:0"
									},
									"scope": 99,
									"src": "481:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "712:50:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 90,
														"name": "entrant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "719:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 91,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -26,
															"src": "729:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "729:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "719:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "719:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "752:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 89,
												"id": 96,
												"nodeType": "Return",
												"src": "745:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3370204e",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 81,
											"modifierName": {
												"argumentTypes": null,
												"id": 80,
												"name": "gateOne",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 15,
												"src": "661:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "661:7:0"
										},
										{
											"arguments": null,
											"id": 83,
											"modifierName": {
												"argumentTypes": null,
												"id": 82,
												"name": "gateTwo",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 29,
												"src": "669:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "669:7:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 85,
													"name": "_gateKey",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "687:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												}
											],
											"id": 86,
											"modifierName": {
												"argumentTypes": null,
												"id": 84,
												"name": "gateThree",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 63,
												"src": "677:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_bytes8_$",
													"typeString": "modifier (bytes8)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "677:19:0"
										}
									],
									"name": "enter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "_gateKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 98,
												"src": "637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 77,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "637:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "636:17:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 98,
												"src": "706:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "706:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:6:0"
									},
									"scope": 99,
									"src": "622:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 100,
							"src": "60:705:0"
						}
					],
					"src": "33:732:0"
				},
				"id": 0
			}
		}
	}
}