{
	"id": "7f06f686970c7e12e4c0bd2d5c47794f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/narri.sol": {
				"content": "//to make this work I needed to use a lot of gas in the test environment or it will fail\r\n\r\npragma solidity ^0.6.0;\r\n\r\n//Original contract\r\ncontract Testi {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/narri.sol": {
				"Testi": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/narri.sol\":140:165  contract Testi {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/narri.sol\":140:165  contract Testi {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207fd9ecd86f50f221e1e85a417a126dc027d1fcb828184f91dba185222f0ba13464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212207fd9ecd86f50f221e1e85a417a126dc027d1fcb828184f91dba185222f0ba13464736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xD9ECD86F50F221E1E85A417A126DC027D1FCB828184F91DBA185222F0BA13464 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "140:25:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212207fd9ecd86f50f221e1e85a417a126dc027d1fcb828184f91dba185222f0ba13464736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xD9ECD86F50F221E1E85A417A126DC027D1FCB828184F91DBA185222F0BA13464 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "140:25:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 140,
									"end": 165,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 140,
									"end": 165,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 140,
									"end": 165,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 165,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 165,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 165,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 140,
									"end": 165,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 165,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 140,
									"end": 165,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 165,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 165,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 140,
									"end": 165,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 165,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 140,
									"end": 165,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 140,
									"end": 165,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 165,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 165,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 165,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 165,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 140,
									"end": 165,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 165,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207fd9ecd86f50f221e1e85a417a126dc027d1fcb828184f91dba185222f0ba13464736f6c634300060c0033",
									".code": [
										{
											"begin": 140,
											"end": 165,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 140,
											"end": 165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 140,
											"end": 165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 165,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/narri.sol\":\"Testi\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/narri.sol\":{\"keccak256\":\"0x9e053704cd6bfc1a7681335963441688d6bc74dd24b671a58e6ba981a2ab5a8f\",\"urls\":[\"bzz-raw://8dba3c85fa7ee0c7f344ba469ec4647b1216ed73485d7e36f8d02c8b58cba62c\",\"dweb:/ipfs/QmfA62V5XdCDJkSfQDzvEkxfdrcAuHuQtpyuBSi6wJZkLw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/narri.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/narri.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/narri.sol": {
				"ast": {
					"absolutePath": "contracts/narri.sol",
					"exportedSymbols": {
						"Testi": [
							2
						]
					},
					"id": 3,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Testi",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "140:25:0"
						}
					],
					"src": "92:73:0"
				},
				"id": 0
			}
		}
	}
}