{
	"id": "a3b4a090903dd6289d9ab319883cb71d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyGatekeeperTwo.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\ncontract MyGatekeeperTwo {\r\n\r\n  address public entrant;\r\n\r\n\r\n  constructor() public{\r\n    bytes8 jma = bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1);\r\n    \r\n  }\r\n  modifier gateOne() {\r\n    require(msg.sender != tx.origin);\r\n    _;\r\n  }\r\n\r\n  modifier gateTwo() {\r\n    uint x;\r\n    assembly { x := extcodesize(caller()) }\r\n    require(x == 0);\r\n    _;\r\n  }\r\n\r\n  modifier gateThree(bytes8 _gateKey) {\r\n    require(uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == uint64(0) - 1);\r\n    _;\r\n  }\r\n\r\n    function getextcodesize() public view returns(uint) {\r\n    uint x;\r\n    assembly { x := extcodesize(address()) }\r\n    return(x );\r\n    \r\n  }\r\n\r\n  function getAllGateThree(bytes8 _gateKey) public view returns(uint64, uint64, bytes8, uint64, uint64, bool) {\r\n    return (uint64(bytes8(keccak256(abi.encodePacked(address(this))))), uint64(_gateKey), bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1), uint64(0) - 1, uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1, uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ uint64(_gateKey) == uint64(0) - 1);\r\n    \r\n  }\r\n\r\n  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\r\n    entrant = tx.origin;\r\n    return true;\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/MyGatekeeperTwo.sol": {
				"MyGatekeeperTwo": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "bytes8",
									"name": "_gateKey",
									"type": "bytes8"
								}
							],
							"name": "enter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "entrant",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes8",
									"name": "_gateKey",
									"type": "bytes8"
								}
							],
							"name": "getAllGateThree",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								},
								{
									"internalType": "bytes8",
									"name": "",
									"type": "bytes8"
								},
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getextcodesize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyGatekeeperTwo.sol\":60:1404  contract MyGatekeeperTwo {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyGatekeeperTwo.sol\":123:258  constructor() public{\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/MyGatekeeperTwo.sol\":150:160  bytes8 jma */\n  0x00\n    /* \"contracts/MyGatekeeperTwo.sol\":244:245  1 */\n  0x01\n    /* \"contracts/MyGatekeeperTwo.sol\":239:240  0 */\n  0x00\n    /* \"contracts/MyGatekeeperTwo.sol\":232:245  uint64(0) - 1 */\n  sub\n    /* \"contracts/MyGatekeeperTwo.sol\":219:223  this */\n  address\n    /* \"contracts/MyGatekeeperTwo.sol\":194:225  abi.encodePacked(address(this)) */\n  add(0x20, mload(0x40))\n  dup1\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  0x14\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/MyGatekeeperTwo.sol\":184:226  keccak256(abi.encodePacked(address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/MyGatekeeperTwo.sol\":170:228  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) */\n  0xc0\n  shr\n    /* \"contracts/MyGatekeeperTwo.sol\":170:245  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1 */\n  xor\n    /* \"contracts/MyGatekeeperTwo.sol\":163:246  bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1) */\n  0xc0\n  shl\n    /* \"contracts/MyGatekeeperTwo.sol\":150:246  bytes8 jma = bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1) */\n  swap1\n  pop\n    /* \"contracts/MyGatekeeperTwo.sol\":123:258  constructor() public{\r... */\n  pop\n    /* \"contracts/MyGatekeeperTwo.sol\":60:1404  contract MyGatekeeperTwo {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyGatekeeperTwo.sol\":60:1404  contract MyGatekeeperTwo {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1c80e4bb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3370204e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9db31d77\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb2da830b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyGatekeeperTwo.sol\":624:764  function getextcodesize() public view returns(uint) {\r... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyGatekeeperTwo.sol\":1261:1401  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\r... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyGatekeeperTwo.sol\":92:114  address public entrant */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyGatekeeperTwo.sol\":770:1255  function getAllGateThree(bytes8 _gateKey) public view returns(uint64, uint64, bytes8, uint64, uint64, bool) {\r... */\n    tag_6:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup8\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyGatekeeperTwo.sol\":624:764  function getextcodesize() public view returns(uint) {\r... */\n    tag_8:\n        /* \"contracts/MyGatekeeperTwo.sol\":670:674  uint */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":683:689  uint x */\n      dup1\n        /* \"contracts/MyGatekeeperTwo.sol\":724:733  address() */\n      address\n        /* \"contracts/MyGatekeeperTwo.sol\":712:734  extcodesize(address()) */\n      extcodesize\n        /* \"contracts/MyGatekeeperTwo.sol\":707:734  x := extcodesize(address()) */\n      swap1\n      pop\n        /* \"contracts/MyGatekeeperTwo.sol\":749:750  x */\n      dup1\n        /* \"contracts/MyGatekeeperTwo.sol\":742:752  return(x ) */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyGatekeeperTwo.sol\":624:764  function getextcodesize() public view returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyGatekeeperTwo.sol\":1261:1401  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\r... */\n    tag_11:\n        /* \"contracts/MyGatekeeperTwo.sol\":1345:1349  bool */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":310:319  tx.origin */\n      origin\n        /* \"contracts/MyGatekeeperTwo.sol\":296:319  msg.sender != tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyGatekeeperTwo.sol\":296:306  msg.sender */\n      caller\n        /* \"contracts/MyGatekeeperTwo.sol\":296:319  msg.sender != tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyGatekeeperTwo.sol\":288:320  require(msg.sender != tx.origin) */\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n        /* \"contracts/MyGatekeeperTwo.sol\":366:372  uint x */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":407:415  caller() */\n      caller\n        /* \"contracts/MyGatekeeperTwo.sol\":395:416  extcodesize(caller()) */\n      extcodesize\n        /* \"contracts/MyGatekeeperTwo.sol\":390:416  x := extcodesize(caller()) */\n      swap1\n      pop\n        /* \"contracts/MyGatekeeperTwo.sol\":437:438  0 */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":432:433  x */\n      dup2\n        /* \"contracts/MyGatekeeperTwo.sol\":432:438  x == 0 */\n      eq\n        /* \"contracts/MyGatekeeperTwo.sol\":424:439  require(x == 0) */\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n        /* \"contracts/MyGatekeeperTwo.sol\":1326:1334  _gateKey */\n      dup3\n        /* \"contracts/MyGatekeeperTwo.sol\":600:601  1 */\n      0x01\n        /* \"contracts/MyGatekeeperTwo.sol\":595:596  0 */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":588:601  uint64(0) - 1 */\n      sub\n        /* \"contracts/MyGatekeeperTwo.sol\":510:601  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == uint64(0) - 1 */\n      0xffffffffffffffff\n      and\n        /* \"contracts/MyGatekeeperTwo.sol\":575:583  _gateKey */\n      dup2\n        /* \"contracts/MyGatekeeperTwo.sol\":568:584  uint64(_gateKey) */\n      0xc0\n      shr\n        /* \"contracts/MyGatekeeperTwo.sol\":551:561  msg.sender */\n      caller\n        /* \"contracts/MyGatekeeperTwo.sol\":534:562  abi.encodePacked(msg.sender) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MyGatekeeperTwo.sol\":524:563  keccak256(abi.encodePacked(msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/MyGatekeeperTwo.sol\":510:565  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) */\n      0xc0\n      shr\n        /* \"contracts/MyGatekeeperTwo.sol\":510:584  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) */\n      xor\n        /* \"contracts/MyGatekeeperTwo.sol\":510:601  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == uint64(0) - 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyGatekeeperTwo.sol\":502:602  require(uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == uint64(0) - 1) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/MyGatekeeperTwo.sol\":1368:1377  tx.origin */\n      origin\n        /* \"contracts/MyGatekeeperTwo.sol\":1358:1365  entrant */\n      0x00\n      dup1\n        /* \"contracts/MyGatekeeperTwo.sol\":1358:1377  entrant = tx.origin */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyGatekeeperTwo.sol\":1391:1395  true */\n      0x01\n        /* \"contracts/MyGatekeeperTwo.sol\":1384:1395  return true */\n      swap3\n      pop\n        /* \"contracts/MyGatekeeperTwo.sol\":446:447  _ */\n      pop\n        /* \"contracts/MyGatekeeperTwo.sol\":327:328  _ */\n      pop\n        /* \"contracts/MyGatekeeperTwo.sol\":1261:1401  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyGatekeeperTwo.sol\":92:114  address public entrant */\n    tag_13:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MyGatekeeperTwo.sol\":770:1255  function getAllGateThree(bytes8 _gateKey) public view returns(uint64, uint64, bytes8, uint64, uint64, bool) {\r... */\n    tag_16:\n        /* \"contracts/MyGatekeeperTwo.sol\":832:838  uint64 */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":840:846  uint64 */\n      dup1\n        /* \"contracts/MyGatekeeperTwo.sol\":848:854  bytes8 */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":856:862  uint64 */\n      dup1\n        /* \"contracts/MyGatekeeperTwo.sol\":864:870  uint64 */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":872:876  bool */\n      dup1\n        /* \"contracts/MyGatekeeperTwo.sol\":942:946  this */\n      address\n        /* \"contracts/MyGatekeeperTwo.sol\":917:948  abi.encodePacked(address(this)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MyGatekeeperTwo.sol\":907:949  keccak256(abi.encodePacked(address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/MyGatekeeperTwo.sol\":893:951  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) */\n      0xc0\n      shr\n        /* \"contracts/MyGatekeeperTwo.sol\":960:968  _gateKey */\n      dup8\n        /* \"contracts/MyGatekeeperTwo.sol\":953:969  uint64(_gateKey) */\n      0xc0\n      shr\n        /* \"contracts/MyGatekeeperTwo.sol\":1052:1053  1 */\n      0x01\n        /* \"contracts/MyGatekeeperTwo.sol\":1047:1048  0 */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":1040:1053  uint64(0) - 1 */\n      sub\n        /* \"contracts/MyGatekeeperTwo.sol\":1027:1031  this */\n      address\n        /* \"contracts/MyGatekeeperTwo.sol\":1002:1033  abi.encodePacked(address(this)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MyGatekeeperTwo.sol\":992:1034  keccak256(abi.encodePacked(address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/MyGatekeeperTwo.sol\":978:1036  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) */\n      0xc0\n      shr\n        /* \"contracts/MyGatekeeperTwo.sol\":978:1053  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1 */\n      xor\n        /* \"contracts/MyGatekeeperTwo.sol\":971:1054  bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1) */\n      0xc0\n      shl\n        /* \"contracts/MyGatekeeperTwo.sol\":1068:1069  1 */\n      0x01\n        /* \"contracts/MyGatekeeperTwo.sol\":1063:1064  0 */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":1056:1069  uint64(0) - 1 */\n      sub\n        /* \"contracts/MyGatekeeperTwo.sol\":1145:1146  1 */\n      0x01\n        /* \"contracts/MyGatekeeperTwo.sol\":1140:1141  0 */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":1133:1146  uint64(0) - 1 */\n      sub\n        /* \"contracts/MyGatekeeperTwo.sol\":1120:1124  this */\n      address\n        /* \"contracts/MyGatekeeperTwo.sol\":1095:1126  abi.encodePacked(address(this)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MyGatekeeperTwo.sol\":1085:1127  keccak256(abi.encodePacked(address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/MyGatekeeperTwo.sol\":1071:1129  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) */\n      0xc0\n      shr\n        /* \"contracts/MyGatekeeperTwo.sol\":1071:1146  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1 */\n      xor\n        /* \"contracts/MyGatekeeperTwo.sol\":1241:1242  1 */\n      0x01\n        /* \"contracts/MyGatekeeperTwo.sol\":1236:1237  0 */\n      0x00\n        /* \"contracts/MyGatekeeperTwo.sol\":1229:1242  uint64(0) - 1 */\n      sub\n        /* \"contracts/MyGatekeeperTwo.sol\":1148:1242  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ uint64(_gateKey) == uint64(0) - 1 */\n      0xffffffffffffffff\n      and\n        /* \"contracts/MyGatekeeperTwo.sol\":1216:1224  _gateKey */\n      dup13\n        /* \"contracts/MyGatekeeperTwo.sol\":1209:1225  uint64(_gateKey) */\n      0xc0\n      shr\n        /* \"contracts/MyGatekeeperTwo.sol\":1197:1201  this */\n      address\n        /* \"contracts/MyGatekeeperTwo.sol\":1172:1203  abi.encodePacked(address(this)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MyGatekeeperTwo.sol\":1162:1204  keccak256(abi.encodePacked(address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/MyGatekeeperTwo.sol\":1148:1206  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) */\n      0xc0\n      shr\n        /* \"contracts/MyGatekeeperTwo.sol\":1148:1225  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ uint64(_gateKey) */\n      xor\n        /* \"contracts/MyGatekeeperTwo.sol\":1148:1242  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ uint64(_gateKey) == uint64(0) - 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyGatekeeperTwo.sol\":885:1243  return (uint64(bytes8(keccak256(abi.encodePacked(address(this))))), uint64(_gateKey), bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1), uint64(0) - 1, uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1, uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ uint64(_gateKey) == uint64(0) - 1) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n        /* \"contracts/MyGatekeeperTwo.sol\":770:1255  function getAllGateThree(bytes8 _gateKey) public view returns(uint64, uint64, bytes8, uint64, uint64, bool) {\r... */\n      swap2\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      swap6\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ff4e43ec19c249600b52f7160d3ca56ad6d03faa0e4034236b75543e2b4d5d0c64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506000600160000330604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1860c01b905050610495806100716000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631c80e4bb146100515780633370204e1461006f5780639db31d77146100ce578063b2da830b14610102575b600080fd5b6100596101c7565b6040518082815260200191505060405180910390f35b6100b66004803603602081101561008557600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506101d5565b60405180821515815260200191505060405180910390f35b6100d66102da565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101496004803603602081101561011857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506102fe565b604051808767ffffffffffffffff1681526020018667ffffffffffffffff1681526020018577ffffffffffffffffffffffffffffffffffffffffffffffff191681526020018467ffffffffffffffff1681526020018367ffffffffffffffff1681526020018215158152602001965050505050505060405180910390f35b600080303b90508091505090565b60003273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561021057600080fd5b6000333b90506000811461022357600080fd5b82600160000367ffffffffffffffff168160c01c33604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1867ffffffffffffffff161461028f57600080fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600192505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060008030604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c8760c01c600160000330604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1860c01b6001600003600160000330604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c18600160000367ffffffffffffffff168c60c01c30604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1867ffffffffffffffff16149550955095509550955095509193955091939556fea2646970667358221220ff4e43ec19c249600b52f7160d3ca56ad6d03faa0e4034236b75543e2b4d5d0c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SUB ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH1 0xC0 SHL SWAP1 POP POP PUSH2 0x495 DUP1 PUSH2 0x71 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1C80E4BB EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x3370204E EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x9DB31D77 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xB2DA830B EQ PUSH2 0x102 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 ADDRESS EXTCODESIZE SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 SUB PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 SHR CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR DUP8 PUSH1 0xC0 SHR PUSH1 0x1 PUSH1 0x0 SUB ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x0 SUB PUSH1 0x1 PUSH1 0x0 SUB ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH1 0x1 PUSH1 0x0 SUB PUSH8 0xFFFFFFFFFFFFFFFF AND DUP13 PUSH1 0xC0 SHR ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH8 0xFFFFFFFFFFFFFFFF AND EQ SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0x4E NUMBER 0xEC NOT 0xC2 0x49 PUSH1 0xB MSTORE 0xF7 AND 0xD EXTCODECOPY 0xA5 PUSH11 0xD6D03FAA0E4034236B7554 RETURNDATACOPY 0x2B 0x4D 0x5D 0xC PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "60:1344:0:-:0;;;123:135;;;;;;;;;;150:10;244:1;239;232:13;219:4;194:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;184:42;;;;;;170:58;;:75;163:83;;150:96;;123:135;60:1344;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631c80e4bb146100515780633370204e1461006f5780639db31d77146100ce578063b2da830b14610102575b600080fd5b6100596101c7565b6040518082815260200191505060405180910390f35b6100b66004803603602081101561008557600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506101d5565b60405180821515815260200191505060405180910390f35b6100d66102da565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101496004803603602081101561011857600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506102fe565b604051808767ffffffffffffffff1681526020018667ffffffffffffffff1681526020018577ffffffffffffffffffffffffffffffffffffffffffffffff191681526020018467ffffffffffffffff1681526020018367ffffffffffffffff1681526020018215158152602001965050505050505060405180910390f35b600080303b90508091505090565b60003273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561021057600080fd5b6000333b90506000811461022357600080fd5b82600160000367ffffffffffffffff168160c01c33604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1867ffffffffffffffff161461028f57600080fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600192505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060008030604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c8760c01c600160000330604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1860c01b6001600003600160000330604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c18600160000367ffffffffffffffff168c60c01c30604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1867ffffffffffffffff16149550955095509550955095509193955091939556fea2646970667358221220ff4e43ec19c249600b52f7160d3ca56ad6d03faa0e4034236b75543e2b4d5d0c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1C80E4BB EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x3370204E EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x9DB31D77 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xB2DA830B EQ PUSH2 0x102 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 ADDRESS EXTCODESIZE SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 SUB PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 SHR CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR DUP8 PUSH1 0xC0 SHR PUSH1 0x1 PUSH1 0x0 SUB ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x0 SUB PUSH1 0x1 PUSH1 0x0 SUB ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH1 0x1 PUSH1 0x0 SUB PUSH8 0xFFFFFFFFFFFFFFFF AND DUP13 PUSH1 0xC0 SHR ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH8 0xFFFFFFFFFFFFFFFF AND EQ SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0x4E NUMBER 0xEC NOT 0xC2 0x49 PUSH1 0xB MSTORE 0xF7 AND 0xD EXTCODECOPY 0xA5 PUSH11 0xD6D03FAA0E4034236B7554 RETURNDATACOPY 0x2B 0x4D 0x5D 0xC PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "60:1344:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:140;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1261;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;92:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;770:485;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:140;670:4;683:6;724:9;712:22;707:27;;749:1;742:10;;;624:140;:::o;1261:::-;1345:4;310:9;296:23;;:10;:23;;;;288:32;;;;;;366:6:::1;407:8;395:21;390:26;;437:1;432;:6;424:15;;;::::0;::::1;;1326:8:::2;600:1;595;588:13;510:91;;575:8;568:16;;551:10;534:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;524:39;;;;;;510:55;;:74;:91;;;502:100;;;::::0;::::2;;1368:9:::3;1358:7;::::0;:19:::3;;;;;;;;;;;;;;;;;;1391:4;1384:11;;446:1:::2;327::::1;1261:140:::0;;;:::o;92:22::-;;;;;;;;;;;;:::o;770:485::-;832:6;840;848;856;864;872:4;942;917:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:42;;;;;;893:58;;960:8;953:16;;1052:1;1047;1040:13;1027:4;1002:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;992:42;;;;;;978:58;;:75;971:83;;1068:1;1063;1056:13;1145:1;1140;1133:13;1120:4;1095:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:42;;;;;;1071:58;;:75;1241:1;1236;1229:13;1148:94;;1216:8;1209:16;;1197:4;1172:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1162:42;;;;;;1148:58;;:77;:94;;;885:358;;;;;;;;;;;;770:485;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "234600",
								"executionCost": "447",
								"totalCost": "235047"
							},
							"external": {
								"enter(bytes8)": "22157",
								"entrant()": "1066",
								"getAllGateThree(bytes8)": "1222",
								"getextcodesize()": "903"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 1404,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 1404,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 1404,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 123,
									"end": 258,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 123,
									"end": 258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 123,
									"end": 258,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 123,
									"end": 258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 258,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 123,
									"end": 258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 123,
									"end": 258,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 123,
									"end": 258,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 123,
									"end": 258,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 150,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 239,
									"end": 240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 245,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 219,
									"end": 223,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 194,
									"end": 225,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 194,
									"end": 225,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 194,
									"end": 225,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 194,
									"end": 225,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 194,
									"end": 225,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 194,
									"end": 225,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 194,
									"end": 225,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 194,
									"end": 225,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 226,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 226,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 226,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 226,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 226,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 226,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 170,
									"end": 228,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 170,
									"end": 228,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 170,
									"end": 245,
									"name": "XOR",
									"source": 0
								},
								{
									"begin": 163,
									"end": 246,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 163,
									"end": 246,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 150,
									"end": 246,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 150,
									"end": 246,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 123,
									"end": 258,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1404,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1404,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1404,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1404,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1404,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff4e43ec19c249600b52f7160d3ca56ad6d03faa0e4034236b75543e2b4d5d0c64736f6c634300060c0033",
									".code": [
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "1C80E4BB"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "3370204E"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "9DB31D77"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "B2DA830B"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1404,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 624,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 624,
											"end": 764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 624,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 670,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 733,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 712,
											"end": 734,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 707,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 707,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 749,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 742,
											"end": 752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 742,
											"end": 752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 742,
											"end": 752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 624,
											"end": 764,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1345,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 319,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 296,
											"end": 306,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 296,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 296,
											"end": 319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 296,
											"end": 319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 296,
											"end": 319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 288,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 288,
											"end": 320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 288,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 288,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 288,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 415,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 395,
											"end": 416,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 390,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 390,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 432,
											"end": 438,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 424,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 424,
											"end": 439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 424,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 439,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 424,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 424,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1334,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 510,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 510,
											"end": 601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 575,
											"end": 583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 568,
											"end": 584,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 551,
											"end": 561,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 534,
											"end": 562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 534,
											"end": 562,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 534,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 534,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 563,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 510,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 510,
											"end": 565,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 510,
											"end": 584,
											"name": "XOR",
											"source": 0
										},
										{
											"begin": 510,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 510,
											"end": 601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 510,
											"end": 601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 502,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 502,
											"end": 602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 502,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 602,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 502,
											"end": 602,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 502,
											"end": 602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1377,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1384,
											"end": 1395,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1401,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 92,
											"end": 114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 114,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 942,
											"end": 946,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 917,
											"end": 948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 917,
											"end": 948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 917,
											"end": 948,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 917,
											"end": 948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 917,
											"end": 948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 917,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 907,
											"end": 949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 949,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 893,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 893,
											"end": 951,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 960,
											"end": 968,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 953,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 953,
											"end": 969,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1047,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1036,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 978,
											"end": 1036,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1053,
											"name": "XOR",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1054,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 971,
											"end": 1054,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1063,
											"end": 1064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1069,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1146,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 1071,
											"end": 1129,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1146,
											"name": "XOR",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1242,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1236,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1242,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1148,
											"end": 1242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1224,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1225,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 1209,
											"end": 1225,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1201,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 1148,
											"end": 1206,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1225,
											"name": "XOR",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1148,
											"end": 1242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"enter(bytes8)": "3370204e",
							"entrant()": "9db31d77",
							"getAllGateThree(bytes8)": "b2da830b",
							"getextcodesize()": "1c80e4bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"_gateKey\",\"type\":\"bytes8\"}],\"name\":\"enter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entrant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"_gateKey\",\"type\":\"bytes8\"}],\"name\":\"getAllGateThree\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getextcodesize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyGatekeeperTwo.sol\":\"MyGatekeeperTwo\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyGatekeeperTwo.sol\":{\"keccak256\":\"0xe1f1b0a73d7c462a3716d4c385a81f7e6f0f54bb4e71bd9c2cfb3928f30a9bff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://077846e4acc5668ad703bbced61b59fbf8900ea47f33142a2287f906afd1f44b\",\"dweb:/ipfs/QmarHh9Rmz4EHf4PLFSZniYm8ZgMiPhxNvyA9vP4eQF1qG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/MyGatekeeperTwo.sol:MyGatekeeperTwo",
								"label": "entrant",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "contracts/MyGatekeeperTwo.sol:10:5: Warning: Unused local variable.\n    bytes8 jma = bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^  uint64(0) - 1);\n    ^--------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 160,
					"file": "contracts/MyGatekeeperTwo.sol",
					"start": 150
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/MyGatekeeperTwo.sol": {
				"ast": {
					"absolutePath": "contracts/MyGatekeeperTwo.sol",
					"exportedSymbols": {
						"MyGatekeeperTwo": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "MyGatekeeperTwo",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9db31d77",
									"id": 3,
									"mutability": "mutable",
									"name": "entrant",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 250,
									"src": "92:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "92:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "143:115:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "jma",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 34,
														"src": "150:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes8",
															"typeString": "bytes8"
														},
														"typeName": {
															"id": 6,
															"name": "bytes8",
															"nodeType": "ElementaryTypeName",
															"src": "150:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 19,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": -28,
																										"src": "219:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_MyGatekeeperTwo_$250",
																											"typeString": "contract MyGatekeeperTwo"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_MyGatekeeperTwo_$250",
																											"typeString": "contract MyGatekeeperTwo"
																										}
																									],
																									"id": 18,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "211:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 17,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "211:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": null,
																											"typeString": null
																										}
																									}
																								},
																								"id": 20,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "211:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 15,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -1,
																								"src": "194:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 16,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "194:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 21,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "194:31:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 14,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -8,
																					"src": "184:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 22,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "184:42:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 13,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "177:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes8_$",
																				"typeString": "type(bytes8)"
																			},
																			"typeName": {
																				"id": 12,
																				"name": "bytes8",
																				"nodeType": "ElementaryTypeName",
																				"src": "177:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "177:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	],
																	"id": 11,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "170:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 10,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "170:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "170:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 27,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "239:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "232:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 25,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "232:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "232:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "244:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "232:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "170:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "163:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes8_$",
															"typeString": "type(bytes8)"
														},
														"typeName": {
															"id": 8,
															"name": "bytes8",
															"nodeType": "ElementaryTypeName",
															"src": "163:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "163:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "150:96:0"
											}
										]
									},
									"documentation": null,
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "134:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "143:0:0"
									},
									"scope": 250,
									"src": "123:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "281:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 38,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "296:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "296:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 40,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -26,
																	"src": "310:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "310:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "296:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "288:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "288:32:0"
											},
											{
												"id": 45,
												"nodeType": "PlaceholderStatement",
												"src": "327:1:0"
											}
										]
									},
									"documentation": null,
									"id": 47,
									"name": "gateOne",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:2:0"
									},
									"src": "262:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "359:94:0",
										"statements": [
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "x",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 60,
														"src": "366:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 49,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "366:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "366:6:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "388:30:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "390:26:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "407:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "407:8:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "395:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:21:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "390:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 50,
														"isOffset": false,
														"isSlot": false,
														"src": "390:1:0",
														"valueSize": 1
													}
												],
												"id": 52,
												"nodeType": "InlineAssembly",
												"src": "379:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "432:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "437:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "432:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "424:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "424:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "424:15:0"
											},
											{
												"id": 59,
												"nodeType": "PlaceholderStatement",
												"src": "446:1:0"
											}
										]
									},
									"documentation": null,
									"id": 61,
									"name": "gateTwo",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "356:2:0"
									},
									"src": "340:113:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "495:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"expression": {
																										"argumentTypes": null,
																										"id": 73,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": -15,
																										"src": "551:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 74,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": null,
																									"src": "551:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"id": 71,
																									"name": "abi",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": -1,
																									"src": "534:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_abi",
																										"typeString": "abi"
																									}
																								},
																								"id": 72,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberName": "encodePacked",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "534:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																									"typeString": "function () pure returns (bytes memory)"
																								}
																							},
																							"id": 75,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "534:28:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 70,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "524:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 76,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "524:39:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 69,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "517:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes8_$",
																					"typeString": "type(bytes8)"
																				},
																				"typeName": {
																					"id": 68,
																					"name": "bytes8",
																					"nodeType": "ElementaryTypeName",
																					"src": "517:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 77,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "517:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		],
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "510:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 66,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "510:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "510:55:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "^",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 81,
																			"name": "_gateKey",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 63,
																			"src": "575:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		],
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "568:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 79,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "568:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "568:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "510:74:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 86,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "595:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "588:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 84,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "588:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "588:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "600:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "588:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "510:91:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 65,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "502:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "502:100:0"
											},
											{
												"id": 93,
												"nodeType": "PlaceholderStatement",
												"src": "609:1:0"
											}
										]
									},
									"documentation": null,
									"id": 95,
									"name": "gateThree",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_gateKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 95,
												"src": "478:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 62,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "478:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "477:17:0"
									},
									"src": "459:157:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "676:88:0",
										"statements": [
											{
												"assignments": [
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 101,
														"mutability": "mutable",
														"name": "x",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 107,
														"src": "683:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 100,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "683:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 102,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "683:6:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "705:31:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "707:27:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nodeType": "YulIdentifier",
																			"src": "724:7:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "724:9:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "712:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:22:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "707:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 101,
														"isOffset": false,
														"isSlot": false,
														"src": "707:1:0",
														"valueSize": 1
													}
												],
												"id": 103,
												"nodeType": "InlineAssembly",
												"src": "696:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 104,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "749:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 105,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "748:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "742:10:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1c80e4bb",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getextcodesize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "670:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "670:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "669:6:0"
									},
									"scope": 250,
									"src": "624:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "878:377:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 134,
																									"name": "this",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": -28,
																									"src": "942:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_MyGatekeeperTwo_$250",
																										"typeString": "contract MyGatekeeperTwo"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_MyGatekeeperTwo_$250",
																										"typeString": "contract MyGatekeeperTwo"
																									}
																								],
																								"id": 133,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "934:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 132,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "934:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 135,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "934:13:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 130,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -1,
																							"src": "917:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 131,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "encodePacked",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "917:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 136,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "917:31:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 129,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -8,
																				"src": "907:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (bytes memory) pure returns (bytes32)"
																				}
																			},
																			"id": 137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "907:42:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "900:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes8_$",
																			"typeString": "type(bytes8)"
																		},
																		"typeName": {
																			"id": 127,
																			"name": "bytes8",
																			"nodeType": "ElementaryTypeName",
																			"src": "900:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "900:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes8",
																		"typeString": "bytes8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes8",
																		"typeString": "bytes8"
																	}
																],
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "893:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint64_$",
																	"typeString": "type(uint64)"
																},
																"typeName": {
																	"id": 125,
																	"name": "uint64",
																	"nodeType": "ElementaryTypeName",
																	"src": "893:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "893:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 142,
																	"name": "_gateKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "960:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes8",
																		"typeString": "bytes8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes8",
																		"typeString": "bytes8"
																	}
																],
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "953:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint64_$",
																	"typeString": "type(uint64)"
																},
																"typeName": {
																	"id": 140,
																	"name": "uint64",
																	"nodeType": "ElementaryTypeName",
																	"src": "953:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "953:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 155,
																												"name": "this",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": -28,
																												"src": "1027:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_contract$_MyGatekeeperTwo_$250",
																													"typeString": "contract MyGatekeeperTwo"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_contract$_MyGatekeeperTwo_$250",
																													"typeString": "contract MyGatekeeperTwo"
																												}
																											],
																											"id": 154,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "1019:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_address_$",
																												"typeString": "type(address)"
																											},
																											"typeName": {
																												"id": 153,
																												"name": "address",
																												"nodeType": "ElementaryTypeName",
																												"src": "1019:7:0",
																												"typeDescriptions": {
																													"typeIdentifier": null,
																													"typeString": null
																												}
																											}
																										},
																										"id": 156,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "1019:13:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 151,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": -1,
																										"src": "1002:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 152,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encodePacked",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": null,
																									"src": "1002:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 157,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1002:31:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 150,
																							"name": "keccak256",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -8,
																							"src": "992:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																								"typeString": "function (bytes memory) pure returns (bytes32)"
																							}
																						},
																						"id": 158,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "992:42:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 149,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "985:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes8_$",
																						"typeString": "type(bytes8)"
																					},
																					"typeName": {
																						"id": 148,
																						"name": "bytes8",
																						"nodeType": "ElementaryTypeName",
																						"src": "985:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "985:50:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			],
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "978:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 146,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "978:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "978:58:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		"id": 166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1047:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1040:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 161,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "1040:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1040:9:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1052:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1040:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"src": "978:75:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																],
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "971:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes8_$",
																	"typeString": "type(bytes8)"
																},
																"typeName": {
																	"id": 144,
																	"name": "bytes8",
																	"nodeType": "ElementaryTypeName",
																	"src": "971:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "971:83:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1063:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1056:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 169,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "1056:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1056:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1068:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1056:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 184,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": -28,
																										"src": "1120:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_MyGatekeeperTwo_$250",
																											"typeString": "contract MyGatekeeperTwo"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_MyGatekeeperTwo_$250",
																											"typeString": "contract MyGatekeeperTwo"
																										}
																									],
																									"id": 183,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "1112:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 182,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "1112:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": null,
																											"typeString": null
																										}
																									}
																								},
																								"id": 185,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1112:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 180,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -1,
																								"src": "1095:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 181,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "1095:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 186,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1095:31:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 179,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -8,
																					"src": "1085:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1085:42:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1078:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes8_$",
																				"typeString": "type(bytes8)"
																			},
																			"typeName": {
																				"id": 177,
																				"name": "bytes8",
																				"nodeType": "ElementaryTypeName",
																				"src": "1078:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1078:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	],
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1071:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 175,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "1071:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1071:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1140:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1133:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 190,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "1133:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1133:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1145:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1133:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "1071:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 206,
																											"name": "this",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": -28,
																											"src": "1197:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_MyGatekeeperTwo_$250",
																												"typeString": "contract MyGatekeeperTwo"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_contract$_MyGatekeeperTwo_$250",
																												"typeString": "contract MyGatekeeperTwo"
																											}
																										],
																										"id": 205,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "1189:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 204,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "1189:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": null,
																												"typeString": null
																											}
																										}
																									},
																									"id": 207,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "1189:13:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"id": 202,
																									"name": "abi",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": -1,
																									"src": "1172:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_abi",
																										"typeString": "abi"
																									}
																								},
																								"id": 203,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberName": "encodePacked",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "1172:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																									"typeString": "function () pure returns (bytes memory)"
																								}
																							},
																							"id": 208,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1172:31:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 201,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "1162:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1162:42:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1155:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes8_$",
																					"typeString": "type(bytes8)"
																				},
																				"typeName": {
																					"id": 199,
																					"name": "bytes8",
																					"nodeType": "ElementaryTypeName",
																					"src": "1155:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1155:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		],
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1148:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 197,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "1148:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1148:58:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "^",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 214,
																			"name": "_gateKey",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "1216:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		],
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1209:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 212,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "1209:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1209:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "1148:77:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1229:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 217,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "1229:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1229:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1241:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1229:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "1148:94:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 224,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "892:351:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint64_$_t_uint64_$_t_bytes8_$_t_uint64_$_t_uint64_$_t_bool_$",
														"typeString": "tuple(uint64,uint64,bytes8,uint64,uint64,bool)"
													}
												},
												"functionReturnParameters": 124,
												"id": 225,
												"nodeType": "Return",
												"src": "885:358:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b2da830b",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllGateThree",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "_gateKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "795:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 109,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "795:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "794:17:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "832:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 112,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "832:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "840:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 114,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "840:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "848:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 116,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "848:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "856:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 118,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "864:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 120,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "864:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "872:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "831:46:0"
									},
									"scope": 250,
									"src": "770:485:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "1351:50:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 241,
														"name": "entrant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1358:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 242,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -26,
															"src": "1368:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1368:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1358:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "1358:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1391:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 240,
												"id": 247,
												"nodeType": "Return",
												"src": "1384:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3370204e",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 232,
											"modifierName": {
												"argumentTypes": null,
												"id": 231,
												"name": "gateOne",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "1300:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1300:7:0"
										},
										{
											"arguments": null,
											"id": 234,
											"modifierName": {
												"argumentTypes": null,
												"id": 233,
												"name": "gateTwo",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 61,
												"src": "1308:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1308:7:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 236,
													"name": "_gateKey",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "1326:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												}
											],
											"id": 237,
											"modifierName": {
												"argumentTypes": null,
												"id": 235,
												"name": "gateThree",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 95,
												"src": "1316:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_bytes8_$",
													"typeString": "modifier (bytes8)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1316:19:0"
										}
									],
									"name": "enter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "_gateKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 249,
												"src": "1276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 228,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "1276:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1275:17:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 249,
												"src": "1345:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1345:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1344:6:0"
									},
									"scope": 250,
									"src": "1261:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 251,
							"src": "60:1344:0"
						}
					],
					"src": "33:1371:0"
				},
				"id": 0
			}
		}
	}
}