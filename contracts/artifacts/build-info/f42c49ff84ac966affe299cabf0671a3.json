{
	"id": "f42c49ff84ac966affe299cabf0671a3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/HakDenial.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity^0.8.0;\r\n\r\ncontract HakDenial{\r\n    \r\n    address owner;\r\n    constructor()  {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier isOwner(){\r\n        require(msg.sender==owner);\r\n        _;\r\n    }\r\n    function kill() isOwner() public {\r\n        selfdestruct(payable (owner));\r\n    }\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/HakDenial.sol": {
				"HakDenial": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/HakDenial.sol\":57:337  contract HakDenial{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/HakDenial.sol\":108:160  constructor()  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/HakDenial.sol\":142:152  msg.sender */\n  caller\n    /* \"contracts/HakDenial.sol\":134:139  owner */\n  0x00\n  dup1\n    /* \"contracts/HakDenial.sol\":134:152  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HakDenial.sol\":57:337  contract HakDenial{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/HakDenial.sol\":57:337  contract HakDenial{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x41c0e1b5\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/HakDenial.sol\":249:330  function kill() isOwner() public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/HakDenial.sol\":217:222  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HakDenial.sol\":205:222  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HakDenial.sol\":205:215  msg.sender */\n      caller\n        /* \"contracts/HakDenial.sol\":205:222  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/HakDenial.sol\":197:223  require(msg.sender==owner) */\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n        /* \"contracts/HakDenial.sol\":315:320  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HakDenial.sol\":293:322  selfdestruct(payable (owner)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n\n    auxdata: 0xa2646970667358221220c62be1959297bcd761f2c2d8d1a358b49304a421609f0b56f75c191fdd013e2364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060fb8061005f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806341c0e1b514602d575b600080fd5b60336035565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614608c57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16fffea2646970667358221220c62be1959297bcd761f2c2d8d1a358b49304a421609f0b56f75c191fdd013e2364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xFB DUP1 PUSH2 0x5F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0x2B 0xE1 SWAP6 SWAP3 SWAP8 0xBC 0xD7 PUSH2 0xF2C2 0xD8 0xD1 LOG3 PC 0xB4 SWAP4 DIV LOG4 0x21 PUSH1 0x9F SIGNEXTEND JUMP 0xF7 0x5C NOT 0x1F 0xDD ADD RETURNDATACOPY 0x23 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "57:280:0:-:0;;;108:52;;;;;;;;;;142:10;134:5;;:18;;;;;;;;;;;;;;;;;;57:280;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@kill_36": {
									"entryPoint": 53,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c806341c0e1b514602d575b600080fd5b60336035565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614608c57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16fffea2646970667358221220c62be1959297bcd761f2c2d8d1a358b49304a421609f0b56f75c191fdd013e2364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0x2B 0xE1 SWAP6 SWAP3 SWAP8 0xBC 0xD7 PUSH2 0xF2C2 0xD8 0xD1 LOG3 PC 0xB4 SWAP4 DIV LOG4 0x21 PUSH1 0x9F SIGNEXTEND JUMP 0xF7 0x5C NOT 0x1F 0xDD ADD RETURNDATACOPY 0x23 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "57:280:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;249:81;;;:::i;:::-;;;217:5;;;;;;;;;;205:17;;:10;:17;;;197:26;;;;;;315:5:::1;::::0;::::1;;;;;;;;293:29;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "50200",
								"executionCost": "24365",
								"totalCost": "74565"
							},
							"external": {
								"kill()": "32022"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 337,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 108,
									"end": 160,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 108,
									"end": 160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 108,
									"end": 160,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 108,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 108,
									"end": 160,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 108,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 108,
									"end": 160,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 108,
									"end": 160,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 108,
									"end": 160,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 108,
									"end": 160,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 142,
									"end": 152,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 134,
									"end": 139,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 139,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 134,
									"end": 152,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 134,
									"end": 152,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 134,
									"end": 152,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 337,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 337,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 337,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 337,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c62be1959297bcd761f2c2d8d1a358b49304a421609f0b56f75c191fdd013e2364736f6c63430008110033",
									".code": [
										{
											"begin": 57,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "41C0E1B5"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 337,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 249,
											"end": 330,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 249,
											"end": 330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 249,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 249,
											"end": 330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 330,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 249,
											"end": 330,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 330,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 249,
											"end": 330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 217,
											"end": 222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 217,
											"end": 222,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 217,
											"end": 222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 222,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 217,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 217,
											"end": 222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 205,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 205,
											"end": 215,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 205,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 205,
											"end": 222,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 197,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 197,
											"end": 223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 197,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 223,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 197,
											"end": 223,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 197,
											"end": 223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 315,
											"end": 320,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 315,
											"end": 320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 293,
											"end": 322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 293,
											"end": 322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 293,
											"end": 322,
											"modifierDepth": 1,
											"name": "SELFDESTRUCT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/HakDenial.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"kill()": "41c0e1b5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HakDenial.sol\":\"HakDenial\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HakDenial.sol\":{\"keccak256\":\"0xc42abe091f01639806cb2cfcee154d0513c051a4935973607e5712c86d1cec40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d484337fb0406983807a7eb578e7df627925bd2479a3fae1c7f61ad8a8eb6871\",\"dweb:/ipfs/QmU66ZNRWYLaw934ibwU1qmoQT2NYxY7buTuiSzHvnjsn3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/HakDenial.sol:HakDenial",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/HakDenial.sol": {
				"ast": {
					"absolutePath": "contracts/HakDenial.sol",
					"exportedSymbols": {
						"HakDenial": [
							37
						]
					},
					"id": 38,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "HakDenial",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 37,
							"linearizedBaseContracts": [
								37
							],
							"name": "HakDenial",
							"nameLocation": "66:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "96:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 37,
									"src": "88:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "88:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "123:37:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "134:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "142:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "146:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "142:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "134:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "134:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "119:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "123:0:0"
									},
									"scope": 37,
									"src": "108:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "186:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "205:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "209:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "205:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "217:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "205:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "197:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "197:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "197:26:0"
											},
											{
												"id": 21,
												"nodeType": "PlaceholderStatement",
												"src": "234:1:0"
											}
										]
									},
									"id": 23,
									"name": "isOwner",
									"nameLocation": "177:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "184:2:0"
									},
									"src": "168:75:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "282:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 31,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "315:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "306:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 29,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "306:9:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "306:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 28,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "293:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "293:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "293:29:0"
											}
										]
									},
									"functionSelector": "41c0e1b5",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 26,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 25,
												"name": "isOwner",
												"nameLocations": [
													"265:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "265:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "265:9:0"
										}
									],
									"name": "kill",
									"nameLocation": "258:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:0:0"
									},
									"scope": 37,
									"src": "249:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 38,
							"src": "57:280:0",
							"usedErrors": []
						}
					],
					"src": "31:306:0"
				},
				"id": 0
			}
		}
	}
}